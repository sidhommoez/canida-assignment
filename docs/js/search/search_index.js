var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.772,1,2.298]],["body/controllers/AppController.html",[0,2.825,1,3.663,2,2.252,3,0.335,4,0.296,5,0.257,6,3.688,7,0.418,8,1.532,9,3.343,10,5.302,11,1.693,12,0.025,13,4.355,14,0.602,15,4.355,16,1.144,17,1.258,18,0.472,19,1.39,20,3.343,21,3.688,22,0.335,23,0.238,24,3.688,25,3.688,26,4.355,27,1.303,28,4.355,29,0.02,30,0.02]],["title/modules/AppModule.html",[31,1.919,32,2.298]],["body/modules/AppModule.html",[1,3.487,2,2.348,3,0.253,4,0.223,5,0.194,12,0.025,18,0.538,19,1.05,20,3.408,21,2.786,22,0.253,23,0.18,29,0.016,30,0.016,31,2.544,32,4.079,33,1.701,34,2.544,35,2.786,36,2.786,37,3.387,38,2.454,39,2.454,40,3.291,41,3.846,42,3.846,43,5.609,44,2.454,45,2.786,46,1.843,47,2.771,48,3.291,49,3.045,50,2.786,51,3.291,52,3.291,53,3.291,54,3.387,55,3.291,56,3.291,57,2.449,58,3.291,59,3.291,60,3.291,61,1.843,62,0.418,63,3.291,64,2.786,65,3.291,66,3.291,67,3.291,68,3.291,69,3.291,70,3.291,71,3.291,72,2.786,73,3.291,74,3.291,75,3.291,76,3.291,77,2.008,78,3.291,79,3.291,80,3.291,81,3.291,82,3.291,83,3.291,84,3.291,85,3.291,86,3.291,87,3.291,88,3.291]],["title/injectables/AppService.html",[20,1.919,89,1.332]],["body/injectables/AppService.html",[3,0.337,4,0.297,5,0.258,7,0.42,8,1.536,9,3.689,10,5.309,12,0.025,14,0.757,16,1.439,17,1.261,18,0.378,19,1.396,20,3.067,22,0.337,23,0.239,27,1.308,29,0.02,30,0.02,89,2.129,90,2.449,91,3.702,92,6.27,93,4.373,94,3.261,95,4.373,96,3.702]],["title/classes/ArticleTable1655032066706.html",[23,0.188,97,2.556]],["body/classes/ArticleTable1655032066706.html",[3,0.111,4,0.098,5,0.085,7,0.139,8,0.678,9,2.447,12,0.025,14,0.785,16,0.635,18,0.314,22,0.111,23,0.079,29,0.009,30,0.009,61,2.447,62,0.722,97,1.803,98,0.333,99,4.884,100,1.226,101,1.621,102,3.113,103,0.772,104,5.353,105,3.113,106,3.113,107,3.113,108,4.044,109,4.044,110,4.044,111,4.044,112,4.044,113,4.044,114,4.044,115,4.044,116,2.047,117,2.047,118,1.837,119,4.084,120,3.671,121,2.608,122,5.476,123,5.476,124,5.476,125,5.476,126,5.476,127,2.227,128,2.418,129,3.625,130,1.447,131,3.113,132,1.447,133,3.113,134,1.447,135,3.113,136,1.447,137,3.636,138,3.636,139,3.636,140,3.636,141,3.636,142,3.273,143,1.447,144,2.4,145,3.636,146,3.636,147,3.636,148,3.636,149,3.636,150,1.447,151,3.636,152,3.636,153,3.636,154,3.636,155,3.636,156,1.447,157,1.447,158,2.418,159,1.447,160,2.418,161,1.447,162,2.418,163,1.447,164,3.113,165,1.447,166,2.418,167,5.05,168,1.447,169,0.678,170,0.678,171,0.453,172,2.218,173,2.418,174,1.447,175,0.97,176,0.97,177,0.97,178,1.447,179,0.493,180,1.899,181,1.447,182,1.447,183,1.447,184,1.447,185,1.447,186,1.447,187,1.447,188,1.447]],["title/classes/BaseDTO.html",[23,0.188,189,1.919]],["body/classes/BaseDTO.html",[3,0.335,4,0.296,5,0.257,7,0.418,12,0.024,14,0.825,17,1.258,22,0.335,23,0.238,29,0.02,30,0.02,62,0.759,98,1.003,103,1.744,171,1.233,189,3.06,190,3.688,191,1.943,192,2.919,193,4.355,194,4.355,195,3.643,196,2.663,197,3.643,198,3.82,199,4.355,200,4.355,201,4.355]],["title/classes/BaseEntity.html",[23,0.188,202,1.529]],["body/classes/BaseEntity.html",[3,0.296,4,0.261,5,0.227,7,0.369,11,2.189,12,0.025,14,0.778,17,1.162,18,0.332,22,0.296,23,0.211,29,0.018,30,0.018,57,2.487,62,0.789,98,0.886,103,1.611,171,1.193,179,1.311,195,3.436,196,2.512,197,3.436,198,3.647,202,2.251,203,3.258,204,3.848,205,5.978,206,4.007,207,3.848,208,5.047,209,3.848,210,3.848,211,3.848,212,3.848,213,5.047,214,5.047,215,2.579,216,3.848]],["title/entities/Course.html",[118,1.247,217,1.643]],["body/entities/Course.html",[3,0.279,4,0.246,5,0.214,7,0.349,11,2.127,12,0.025,14,0.756,17,1.118,18,0.504,22,0.279,23,0.199,29,0.017,30,0.017,57,2.02,62,0.695,77,2.215,103,1.55,118,1.766,121,2.276,127,2.662,129,4.08,144,2.43,179,1.237,202,2.166,206,2.433,215,3.255,217,1.741,218,3.074,219,2.707,220,3.63,221,3.63,222,4.112,223,4.856,224,3.63,225,3.074,226,4.856,227,4.856,228,3.63,229,3.074,230,4.112,231,4.112,232,3.074,233,2.707,234,3.63,235,3.63,236,3.63,237,1.619]],["title/controllers/CourseController.html",[0,1.772,238,2.298]],["body/controllers/CourseController.html",[0,1.348,2,1.348,3,0.201,4,0.177,5,0.154,7,0.25,8,1.078,11,1.495,12,0.025,14,0.531,16,1.01,17,1.052,18,0.516,19,0.832,22,0.201,23,0.143,24,2.207,25,2.207,27,1.15,29,0.018,30,0.014,61,3.153,62,0.716,142,3.013,169,1.078,170,1.078,171,0.72,172,3.078,180,1.59,191,2.511,196,2.25,238,2.578,239,2.207,240,2.207,241,3.846,242,3.846,243,2.606,244,3.382,245,2.606,246,5.63,247,3.846,248,5.045,249,3.013,250,2.606,251,3.869,252,2.606,253,2.606,254,3.846,255,2.606,256,3.256,257,2.207,258,3.846,259,2.606,260,3.846,261,4.57,262,4.57,263,2.606,264,1.59,265,1.459,266,2.559,267,2.207,268,2.606,269,1.747,270,2.606,271,1.747,272,1.747,273,2.606,274,1.348,275,2.825,276,2.207,277,2.606,278,2.606,279,2.606,280,2.207,281,1.459,282,2.606,283,3.256,284,2.606,285,1.459,286,3.846,287,2.606,288,2.606,289,2.606,290,3.256,291,2.606,292,2.606,293,2.606,294,3.846,295,2.606,296,1.747,297,2.606,298,2.606,299,2.606,300,2.606,301,2.606,302,2.606]],["title/classes/CourseDTO.html",[23,0.188,249,1.919]],["body/classes/CourseDTO.html",[3,0.234,4,0.206,5,0.179,7,0.291,11,1.936,12,0.025,14,0.82,17,1.147,18,0.512,22,0.234,23,0.272,29,0.015,30,0.015,57,2.072,62,0.805,98,0.699,103,1.37,118,1.561,121,2.072,127,2.635,129,3.714,144,2.252,171,1.111,176,2.034,177,2.034,189,3.321,191,2.222,192,2.877,195,2.619,196,1.915,197,2.619,198,2.619,237,1.915,249,2.403,264,1.851,303,2.569,304,2.403,305,2.263,306,3.034,307,4.292,308,4.038,309,3.034,310,3.034,311,2.263,312,3.201,313,3.201,314,2.263,315,3.034,316,3.714,317,2.263,318,2.263,319,2.263,320,3.714,321,1.569,322,3.201,323,2.034,324,2.263,325,2.263,326,2.263]],["title/classes/CourseMapper.html",[23,0.188,327,2.298]],["body/classes/CourseMapper.html",[3,0.258,4,0.227,5,0.198,7,0.322,8,1.29,12,0.025,14,0.636,16,1.209,18,0.397,22,0.258,23,0.183,27,1.691,29,0.017,30,0.017,62,0.585,98,0.772,118,2.443,169,1.29,170,1.29,171,0.862,175,2.246,191,1.495,249,3.705,281,1.468,285,1.804,304,2.576,327,3.083,328,2.838,329,3.43,330,4.102,331,3.43,332,3.43,333,4.6,334,3.351,335,4.6,336,3.351,337,2.838,338,3.43,339,3.351,340,3.43,341,4.6,342,4.6,343,3.351]],["title/classes/CourseRepository.html",[23,0.188,344,2.091]],["body/classes/CourseRepository.html",[3,0.372,4,0.328,5,0.286,12,0.025,18,0.503,22,0.372,23,0.265,29,0.021,30,0.021,98,1.114,118,1.76,179,1.648,237,2.6,344,3.556,345,4.097,346,4.194,347,3.608,348,4.838,349,4.838]],["title/injectables/CourseService.html",[89,1.332,266,1.919]],["body/injectables/CourseService.html",[3,0.173,4,0.152,5,0.132,7,0.215,8,0.963,12,0.025,14,0.765,16,1.397,17,1.348,18,0.478,19,0.716,22,0.173,23,0.123,27,1.591,29,0.012,30,0.012,46,1.255,61,3.645,62,0.704,89,1.335,90,1.255,118,0.815,121,0.933,169,1.552,170,1.552,171,1.037,172,3.645,179,0.764,180,3.245,196,1.862,249,1.923,266,1.923,281,0.716,285,1.767,327,1.503,337,1.898,344,3.245,350,1.898,351,2.302,352,2.561,353,2.561,354,2.561,355,3.434,356,3.434,357,1.159,358,2.242,359,2.242,360,2.561,361,4.128,362,2.242,363,3.112,364,2.561,365,2.242,366,2.561,367,3.488,368,2.242,369,2.561,370,2.242,371,3.434,372,2.242,373,3.434,374,2.242,375,1.672,376,1.672,377,1.672,378,1.898,379,1.255,380,1.503,381,1.368,382,2.242,383,2.242,384,1.368,385,3.112,386,2.242,387,2.242,388,2.242,389,4.173,390,3.434,391,2.242,392,2.242,393,3.112,394,2.242,395,3.434,396,2.561,397,2.242,398,2.242,399,4.173,400,1.672,401,1.672,402,1.672]],["title/modules/CoursesModule.html",[31,1.919,47,2.091]],["body/modules/CoursesModule.html",[2,2.467,3,0.272,4,0.24,5,0.209,12,0.025,18,0.572,19,1.129,22,0.272,23,0.193,29,0.017,30,0.017,31,2.672,33,1.828,34,2.672,37,3.558,38,2.637,39,2.637,41,4.04,42,4.04,44,2.637,45,2.994,46,1.98,47,4.039,54,2.637,238,3.619,266,3.38,267,2.994,344,2.911,378,2.994,403,2.994,404,2.994,405,3.682,406,3.682,407,3.536,408,3.536,409,2.911,410,2.994,411,2.157,412,2.37,413,2.994,414,3.536,415,3.536,416,3.536,417,3.536,418,3.536]],["title/classes/HeaderUtil.html",[23,0.188,271,2.298]],["body/classes/HeaderUtil.html",[3,0.146,4,0.129,5,0.112,7,0.182,8,0.844,12,0.026,14,0.685,16,1.303,17,1.142,18,0.26,22,0.146,23,0.104,27,0.567,29,0.011,30,0.011,57,0.788,62,0.63,64,3.944,98,0.436,169,1.458,170,1.391,171,0.929,257,5.393,265,1.061,271,2.019,272,3.486,274,2.689,276,1.605,281,0.961,285,1.774,290,1.605,330,4.239,384,2.287,419,1.413,420,3.012,421,3.012,422,3.012,423,3.012,424,3.012,425,3.012,426,3.012,427,4.636,428,6.154,429,1.895,430,4.659,431,3.012,432,1.895,433,3.012,434,1.895,435,3.012,436,1.895,437,1.156,438,3.012,439,4.824,440,1.895,441,3.012,442,5.2,443,5.396,444,3.748,445,1.895,446,3.699,447,1.605,448,1.413,449,1.605,450,3.184,451,3.748,452,1.895,453,1.895,454,1.895,455,3.012,456,3.173,457,3.748,458,1.895,459,3.012,460,1.895,461,3.012,462,1.895,463,1.27,464,1.895,465,1.895,466,1.895,467,1.895,468,1.837,469,3.748,470,3.012,471,1.895,472,1.895,473,1.895,474,1.895,475,1.895,476,1.895,477,1.895,478,1.895,479,1.895,480,1.895,481,1.895]],["title/controllers/HealthController.html",[0,1.772,482,2.298]],["body/controllers/HealthController.html",[0,2.093,2,2.093,3,0.312,4,0.275,5,0.239,7,0.389,8,1.463,11,1.574,12,0.025,14,0.559,16,1.064,18,0.45,19,1.292,22,0.312,23,0.221,27,1.211,29,0.019,30,0.019,240,3.428,357,2.093,384,3.521,482,3.496,483,3.89,484,3.428,485,5.216,486,5.161,487,4.048,488,4.048,489,5.216,490,5.216,491,5.216,492,5.216,493,3.019,494,4.048,495,4.048,496,4.048,497,4.048,498,4.048,499,4.048,500,4.048,501,4.048]],["title/modules/HealthModule.html",[31,1.919,49,2.298]],["body/modules/HealthModule.html",[2,2.89,3,0.348,4,0.307,5,0.267,12,0.025,18,0.548,19,1.442,22,0.348,23,0.247,29,0.02,30,0.02,31,3.13,33,2.336,49,3.747,50,3.825,54,3.369,482,4.069,483,3.369,493,3.369,502,4.518,503,5.59,504,3.825,505,5.59,506,4.518]],["title/classes/HttpExceptionFilter.html",[23,0.188,507,2.556]],["body/classes/HttpExceptionFilter.html",[3,0.267,4,0.235,5,0.205,7,0.333,8,1.32,12,0.025,14,0.479,16,0.911,18,0.462,19,1.107,22,0.267,23,0.19,29,0.017,30,0.017,62,0.441,94,2.587,98,0.799,101,3.157,169,0.973,170,0.973,171,0.65,244,3.157,265,1.942,281,1.107,283,3.987,285,1.914,379,2.994,381,2.116,427,3.512,439,3.987,507,3.512,508,3.987,509,2.587,510,4.527,511,4.527,512,4.709,513,5.735,514,4.527,515,4.855,516,3.469,517,3.469,518,2.937,519,3.469,520,2.937,521,2.937,522,2.937,523,2.937,524,3.469,525,3.469,526,3.469,527,3.469,528,3.469,529,3.469,530,3.469,531,3.469,532,3.469,533,3.469,534,2.937,535,3.469,536,2.937,537,2.937,538,2.937,539,2.937]],["title/injectables/LoggingInterceptor.html",[89,1.332,269,2.298]],["body/injectables/LoggingInterceptor.html",[3,0.304,4,0.268,5,0.233,7,0.379,8,1.438,12,0.025,14,0.545,16,1.037,18,0.492,19,1.259,22,0.304,23,0.216,27,1.18,29,0.018,30,0.018,62,0.501,89,1.994,90,2.209,101,2.645,169,1.106,170,1.106,171,0.739,244,3.439,251,3.341,256,3.341,265,2.209,269,3.821,285,1.259,540,3.341,541,5.13,542,5.13,543,6.036,544,5.701,545,6.036,546,3.946,547,3.946,548,5.701,549,5.13,550,3.341,551,3.946,552,3.946,553,3.946,554,3.946,555,3.946,556,3.946]],["title/classes/Page.html",[23,0.188,274,1.772]],["body/classes/Page.html",[3,0.23,4,0.203,5,0.176,7,0.287,9,3.583,12,0.025,14,0.743,17,1.136,18,0.366,22,0.38,23,0.294,27,0.893,29,0.015,30,0.015,62,0.75,98,0.687,103,1.354,169,0.837,170,0.837,171,0.559,202,1.331,274,2.779,275,3.179,281,1.354,285,0.953,296,2.843,321,1.543,357,1.543,437,3.279,463,3.806,468,1.821,557,2.001,558,4.008,559,4.234,560,2.985,561,4.008,562,2.985,563,4.935,564,2.226,565,2.226,566,3.68,567,3.702,568,2.226,569,2.226,570,2.226,571,2.226,572,2.226,573,2.226,574,3.163,575,2.226,576,2.226,577,2.226,578,3.68,579,2.226,580,2.226,581,2.226,582,3.163,583,3.163,584,3.163,585,2.226,586,2.226]],["title/classes/PageRequest.html",[23,0.188,275,1.919]],["body/classes/PageRequest.html",[3,0.224,4,0.197,5,0.171,7,0.279,9,2.973,11,1.89,12,0.026,14,0.734,17,1.119,18,0.359,22,0.374,23,0.29,27,0.869,29,0.015,30,0.015,62,0.743,98,0.669,103,1.328,119,3.626,120,3.259,169,0.815,170,0.815,171,0.544,202,1.296,274,3.023,275,2.722,281,1.552,285,0.927,296,2.789,321,1.502,357,1.502,437,1.772,463,1.947,468,2.539,557,1.947,558,2.166,559,2.166,561,3.626,564,2.166,565,2.166,566,4.19,567,3.969,568,2.166,569,2.166,570,2.166,571,2.166,572,2.166,573,2.166,574,3.103,575,2.166,576,2.166,577,2.166,578,4.49,579,3.103,580,3.103,581,3.103,582,3.103,583,3.103,584,3.103,585,2.166,586,2.166,587,4.161,588,2.905,589,2.905,590,2.905]],["title/entities/Professor.html",[127,1.426,217,1.643]],["body/entities/Professor.html",[3,0.304,4,0.268,5,0.233,7,0.379,11,1.994,12,0.025,14,0.709,17,1.181,18,0.492,22,0.304,23,0.216,29,0.018,30,0.018,57,2.511,62,0.652,77,2.407,103,1.637,118,2.195,121,2.372,127,2.134,142,3.192,179,1.344,202,2.288,206,2.645,215,3.439,217,1.892,219,2.942,231,3.341,232,4.344,233,2.942,237,1.76,591,3.341,592,3.946,593,4.344,594,5.13,595,3.946,596,4.344,597,3.946,598,3.341,599,3.946]],["title/classes/ProfessorDTO.html",[23,0.188,600,2.091]],["body/classes/ProfessorDTO.html",[3,0.253,4,0.223,5,0.194,7,0.316,11,1.766,12,0.025,14,0.813,17,1.198,18,0.508,22,0.253,23,0.285,29,0.016,30,0.016,57,1.89,62,0.793,98,0.758,103,1.45,118,2.04,121,2.164,127,1.89,142,2.913,171,1.14,175,2.206,189,3.408,191,2.32,192,3.045,195,2.771,196,2.026,197,2.771,198,2.771,237,2.026,264,2.008,304,2.544,305,2.454,308,3.387,311,2.454,312,3.387,313,3.387,314,2.454,316,3.879,317,2.454,318,2.454,319,2.454,320,3.879,321,1.701,322,3.387,323,2.206,324,2.454,325,2.454,326,2.454,600,2.771,601,2.786,602,3.291,603,3.291]],["title/classes/ProfessorMapper.html",[23,0.188,604,2.298]],["body/classes/ProfessorMapper.html",[3,0.258,4,0.227,5,0.198,7,0.322,8,1.29,12,0.025,14,0.636,16,1.209,18,0.397,22,0.258,23,0.183,27,1.691,29,0.017,30,0.017,62,0.585,98,0.772,127,2.795,169,1.29,170,1.29,171,0.862,176,2.246,191,1.495,281,1.468,285,1.804,304,2.576,329,3.43,330,4.102,331,3.43,332,3.43,338,3.43,340,3.43,600,4.037,604,3.083,605,2.838,606,4.6,607,3.351,608,4.6,609,3.351,610,2.838,611,3.351,612,4.6,613,4.6,614,3.351]],["title/classes/ProfessorRepository.html",[23,0.188,409,2.091]],["body/classes/ProfessorRepository.html",[3,0.372,4,0.328,5,0.286,12,0.025,18,0.503,22,0.372,23,0.265,29,0.021,30,0.021,98,1.114,127,2.013,176,3.243,179,1.648,237,2.6,346,4.194,347,3.608,409,3.556,615,4.097,616,4.838]],["title/injectables/ProfessorService.html",[89,1.332,405,2.091]],["body/injectables/ProfessorService.html",[3,0.174,4,0.153,5,0.133,7,0.217,8,0.969,12,0.025,14,0.767,16,1.402,17,1.351,18,0.479,19,0.722,22,0.174,23,0.124,27,1.596,29,0.012,30,0.012,46,1.266,61,3.65,62,0.706,89,1.343,90,1.266,121,0.94,127,0.94,169,1.557,170,1.557,171,1.04,172,3.653,179,0.77,180,3.256,196,1.871,281,0.722,285,1.772,351,2.316,352,2.577,353,2.577,354,2.577,357,1.169,360,2.577,361,4.14,363,3.128,364,2.577,366,2.577,367,3.503,369,2.577,375,1.686,376,1.686,377,1.686,379,1.266,380,1.515,381,1.379,384,1.379,385,3.128,393,3.128,396,2.577,400,1.686,401,1.686,402,1.686,405,2.108,409,3.256,410,1.914,600,2.108,604,1.515,610,1.914,617,1.914,618,3.456,619,3.456,620,2.261,621,2.261,622,2.261,623,2.261,624,2.261,625,2.261,626,3.456,627,2.261,628,3.456,629,2.261,630,2.261,631,2.261,632,2.261,633,4.195,634,3.456,635,2.261,636,2.261,637,2.261,638,3.456,639,2.261,640,2.261,641,4.195]],["title/classes/QueryExceptionFilter.html",[23,0.188,642,2.556]],["body/classes/QueryExceptionFilter.html",[3,0.249,4,0.219,5,0.191,7,0.31,8,1.258,12,0.025,14,0.447,16,0.849,18,0.481,19,1.032,22,0.249,23,0.177,29,0.016,30,0.016,62,0.411,94,2.41,98,0.744,101,3.007,169,0.906,170,0.906,171,0.605,179,1.101,244,3.007,265,1.81,281,1.645,285,1.645,379,1.81,381,1.972,427,3.346,509,2.41,510,4.363,511,4.363,514,4.363,515,4.713,518,2.737,520,2.737,521,2.737,522,2.737,523,2.737,534,4.363,536,4.363,537,4.363,538,4.363,539,4.363,642,3.346,643,3.799,644,4.486,645,3.232,646,3.232,647,3.232,648,3.232,649,3.232,650,5.566,651,3.232,652,3.232,653,4.486,654,4.486,655,5.153,656,3.232,657,3.232,658,3.232,659,3.232,660,3.232,661,3.232,662,3.232]],["title/classes/Sort.html",[23,0.188,567,2.091]],["body/classes/Sort.html",[3,0.232,4,0.205,5,0.178,7,0.29,8,1.199,9,3.483,12,0.026,14,0.746,16,0.793,17,1.402,18,0.369,22,0.382,23,0.296,27,0.903,29,0.015,30,0.015,62,0.725,98,0.695,103,1.365,169,0.846,170,0.846,171,0.565,202,1.346,274,2.567,275,2.394,281,1.365,285,0.963,296,2.866,321,1.56,357,1.56,437,1.841,463,2.023,468,1.841,557,2.023,558,2.25,559,2.25,561,2.25,564,2.25,565,2.25,566,3.703,567,3.859,568,3.703,569,3.703,570,3.188,571,3.188,572,3.188,573,2.25,574,3.188,575,2.25,576,4.028,577,2.25,578,3.703,579,2.25,580,2.25,581,2.25,582,3.188,583,3.188,584,3.188,585,2.25,586,2.25,663,4.275,664,3.018,665,3.018]],["title/entities/Student.html",[144,1.426,217,1.643]],["body/entities/Student.html",[3,0.303,4,0.267,5,0.232,7,0.377,11,1.99,12,0.025,14,0.707,17,1.178,18,0.491,22,0.303,23,0.215,29,0.018,30,0.018,57,2.508,62,0.65,77,2.398,103,1.634,118,2.192,121,2.367,142,3.186,144,2.129,179,1.339,202,2.283,206,2.635,215,3.431,217,1.885,219,2.932,225,3.329,229,4.333,230,4.333,233,2.932,237,1.754,593,4.333,596,4.333,598,3.329,666,3.329,667,3.931,668,3.931,669,3.931,670,3.931,671,3.931]],["title/classes/StudentDTO.html",[23,0.188,672,2.091]],["body/classes/StudentDTO.html",[3,0.253,4,0.223,5,0.194,7,0.316,11,1.766,12,0.025,14,0.813,17,1.198,18,0.508,22,0.253,23,0.285,29,0.016,30,0.016,57,1.89,62,0.793,98,0.758,103,1.45,118,2.04,121,2.164,142,2.913,144,1.89,171,1.14,175,2.206,189,3.408,191,2.32,192,3.045,195,2.771,196,2.026,197,2.771,198,2.771,237,2.026,264,2.008,304,2.544,305,2.454,308,3.387,311,2.454,312,3.387,313,3.387,314,2.454,316,3.879,317,2.454,318,2.454,319,2.454,320,3.879,321,1.701,322,3.387,323,2.206,324,2.454,325,2.454,326,2.454,672,2.771,673,2.786,674,3.291,675,3.291]],["title/classes/StudentMapper.html",[23,0.188,676,2.298]],["body/classes/StudentMapper.html",[3,0.258,4,0.227,5,0.198,7,0.322,8,1.29,12,0.025,14,0.636,16,1.209,18,0.397,22,0.258,23,0.183,27,1.691,29,0.017,30,0.017,62,0.585,98,0.772,144,2.795,169,1.29,170,1.29,171,0.862,177,2.246,191,1.495,281,1.468,285,1.804,304,2.576,329,3.43,330,4.102,331,3.43,332,3.43,338,3.43,340,3.43,672,4.037,676,3.083,677,2.838,678,4.6,679,3.351,680,4.6,681,3.351,682,2.838,683,3.351,684,4.6,685,4.6,686,3.351]],["title/classes/StudentRepository.html",[23,0.188,411,2.091]],["body/classes/StudentRepository.html",[3,0.371,4,0.327,5,0.284,12,0.025,18,0.502,22,0.371,23,0.264,29,0.021,30,0.021,98,1.109,144,2.004,177,3.229,179,1.641,237,2.593,346,4.186,347,3.592,411,3.547,412,3.229,687,4.079,688,4.817]],["title/injectables/StudentService.html",[89,1.332,406,2.091]],["body/injectables/StudentService.html",[3,0.174,4,0.153,5,0.133,7,0.217,8,0.967,12,0.025,14,0.767,16,1.401,17,1.35,18,0.479,19,0.72,22,0.174,23,0.123,27,1.595,29,0.012,30,0.012,46,1.263,61,3.649,62,0.705,89,1.341,90,1.263,121,0.939,144,0.939,169,1.556,170,1.556,171,1.039,172,3.651,179,0.768,180,3.253,196,1.869,281,0.72,285,1.771,351,2.313,352,2.573,353,2.573,354,2.573,357,1.166,360,2.573,361,4.137,363,3.124,364,2.573,366,2.573,367,3.499,369,2.573,375,1.682,376,1.682,377,1.682,379,1.263,380,1.512,381,1.376,384,1.376,385,3.124,393,3.124,396,2.573,400,1.682,401,1.682,402,1.682,406,2.105,411,3.253,412,1.512,413,1.91,672,2.105,676,1.512,682,1.91,689,1.91,690,3.45,691,3.45,692,2.256,693,2.256,694,2.256,695,2.256,696,2.256,697,2.256,698,3.45,699,2.256,700,3.45,701,2.256,702,2.256,703,2.256,704,2.256,705,4.189,706,3.45,707,2.256,708,3.45,709,2.256,710,2.256,711,2.256,712,2.256,713,4.189]],["title/coverage.html",[714,3.955]],["body/coverage.html",[0,2.376,1,1.764,5,0.155,6,2.228,12,0.025,20,1.474,23,0.365,29,0.014,30,0.014,62,0.334,89,2.1,91,2.228,97,1.962,99,2.228,100,2.228,118,0.957,127,1.095,144,1.095,189,1.474,190,2.228,202,1.174,203,2.228,217,2.203,218,2.228,238,1.764,239,2.228,249,1.474,266,1.474,269,1.764,271,1.764,272,3.08,274,1.361,275,1.474,281,0.84,303,2.228,327,1.764,328,2.228,344,1.606,345,2.228,350,2.228,405,1.606,406,1.606,409,1.606,411,1.606,412,1.764,419,3.427,446,1.962,450,1.962,456,2.228,468,4.185,482,1.764,483,1.962,484,2.228,507,1.962,508,2.228,509,2.888,540,2.228,557,3.08,567,1.606,591,2.228,600,1.606,601,2.228,604,1.764,605,2.228,615,2.228,617,2.228,642,1.962,643,2.228,666,2.228,672,1.606,673,2.228,676,1.764,677,2.228,687,2.228,689,2.228,714,2.228,715,2.632,716,2.632,717,5.402,718,3.873,719,2.632,720,4.595,721,6.22,722,2.228,723,3.873,724,2.228,725,2.632,726,4.595,727,2.632,728,2.632,729,2.632,730,2.632,731,3.873,732,3.873,733,4.595,734,4.595,735,2.632,736,3.873,737,2.228,738,2.228,739,2.632,740,2.632]],["title/dependencies.html",[34,2.307,741,2.137]],["body/dependencies.html",[12,0.025,19,1.332,23,0.291,29,0.019,30,0.019,34,2.336,44,3.111,46,2.336,179,1.811,264,2.545,265,2.978,321,2.157,323,2.797,493,3.111,504,3.532,550,3.532,742,4.172,743,5.854,744,4.172,745,4.172,746,4.172,747,4.172,748,4.172,749,4.172,750,4.172,751,4.172,752,4.172,753,4.172,754,4.172,755,4.172,756,4.172,757,4.172,758,4.172,759,4.172,760,4.172,761,4.172,762,4.172,763,4.172,764,4.172,765,4.172,766,4.172,767,4.172]],["title/miscellaneous/enumerations.html",[768,1.605,769,3.489]],["body/miscellaneous/enumerations.html",[7,0.404,12,0.025,29,0.019,30,0.019,120,4.574,217,2.016,280,3.56,379,2.992,380,2.818,768,2.354,769,3.56,770,4.204,771,5.344,772,5.344,773,5.344,774,4.204,775,4.204,776,4.204,777,4.204,778,4.204,779,4.204,780,4.204,781,4.204,782,4.204,783,4.204,784,3.56,785,4.204,786,4.204,787,5.344,788,4.204,789,4.204,790,4.204,791,4.204,792,4.204,793,4.204,794,4.204]],["title/miscellaneous/functions.html",[768,1.605,795,3.489]],["body/miscellaneous/functions.html",[7,0.471,12,0.023,16,1.288,29,0.021,30,0.021,62,0.623,169,1.375,170,1.375,171,0.919,722,4.152,724,5.328,737,4.152,738,4.976,768,2.746,795,4.152,796,4.904,797,4.904,798,4.904,799,5.877,800,4.152]],["title/index.html",[7,0.275,801,2.866,802,2.427]],["body/index.html",[4,0.261,5,0.227,12,0.018,29,0.014,30,0.014,33,1.348,34,1.459,72,2.207,116,2.207,117,2.207,171,0.488,222,2.207,346,1.747,351,1.747,437,1.59,448,1.944,486,2.207,741,1.944,784,2.207,800,3.869,802,2.207,803,4.57,804,2.606,805,6.434,806,2.606,807,2.606,808,5.045,809,2.606,810,5.045,811,2.606,812,2.606,813,2.606,814,2.606,815,2.606,816,5.38,817,2.606,818,3.846,819,3.846,820,4.57,821,3.846,822,3.846,823,5.045,824,2.606,825,3.846,826,4.57,827,4.57,828,3.846,829,2.606,830,2.606,831,2.606,832,2.606,833,3.256,834,4.57,835,2.606,836,2.606,837,2.606,838,5.38,839,2.606,840,2.606,841,2.606,842,2.606,843,2.606,844,3.846,845,2.606,846,2.606,847,2.606,848,3.846,849,5.38,850,3.846,851,2.606,852,2.207,853,2.606,854,2.606,855,2.606,856,2.606,857,2.606,858,2.606,859,2.606,860,2.606,861,2.606,862,2.606,863,3.846,864,2.606,865,2.606,866,2.606,867,2.606,868,2.606,869,2.606,870,2.606,871,2.606,872,2.606,873,5.38,874,2.606,875,2.606,876,2.606,877,2.606,878,3.846,879,2.606,880,2.606,881,2.606,882,2.606,883,2.606,884,2.606,885,2.606,886,2.606,887,2.606,888,2.606,889,2.606,890,2.606,891,2.606,892,2.606,893,3.846,894,3.846,895,2.606,896,2.606,897,2.606,898,2.606,899,2.606,900,2.606,901,2.606,902,2.606,903,2.606,904,2.606,905,2.606,906,2.606,907,2.606,908,2.606,909,2.606,910,2.606,911,2.606,912,4.57,913,3.846,914,3.846,915,2.606,916,2.606,917,2.606,918,3.846,919,2.606,920,2.606,921,2.606,922,4.57,923,2.606,924,2.606,925,2.606,926,2.606,927,2.606,928,2.606,929,2.606]],["title/modules.html",[33,2.415]],["body/modules.html",[12,0.022,29,0.022,30,0.022,32,3.41,33,2.63,47,3.103,49,3.41,833,4.307,930,6.006,931,6.006,932,6.006,933,6.391,934,5.087]],["title/overview.html",[935,3.955]],["body/overview.html",[2,2.27,12,0.024,20,3.356,29,0.02,30,0.02,32,4.209,33,2.27,34,3.075,35,3.717,36,3.717,37,4.095,38,3.274,39,3.274,47,4.127,77,2.679,90,2.458,98,1.011,266,3.356,403,3.717,404,3.717,405,3.656,406,3.656,935,3.717,936,5.993,937,4.39,938,4.39]],["title/properties.html",[103,1.315,741,2.137]],["body/properties.html",[12,0.025,29,0.022,30,0.022,96,4.389,103,1.654,191,2.312,852,4.389,939,5.183,940,5.183,941,5.183]],["title/miscellaneous/variables.html",[768,1.605,942,3.489]],["body/miscellaneous/variables.html",[7,0.465,12,0.024,17,1.114,29,0.021,30,0.021,57,2.013,62,0.615,119,4.347,120,3.907,272,3.243,419,4.666,446,4.347,447,4.097,448,3.608,449,4.097,450,4.347,768,2.709,942,4.097,943,5.829]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":468,"title":{},"body":{"classes/HeaderUtil.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["0.0.1",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"properties.html":{}}}],["0.0.7",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["0.5.6",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":470,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["1/3",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":938,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":579,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["200",{"_index":248,"title":{},"body":{"controllers/CourseController.html":{}}}],["23503",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["23505",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["25",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["261a",{"_index":123,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["293d95d389b3",{"_index":141,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["3",{"_index":936,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["3001:3001",{"_index":865,"title":{},"body":{"index.html":{}}}],["33",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["4.3.0",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["419a",{"_index":124,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["449b",{"_index":153,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["469a",{"_index":147,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["4c0e",{"_index":139,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["5",{"_index":937,"title":{},"body":{"overview.html":{}}}],["5.2.1",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["6b28",{"_index":152,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["7.2.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["8e33",{"_index":140,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["9508",{"_index":146,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["9d0c",{"_index":148,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["9e8a5ec019d7",{"_index":149,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["__dirname",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["a367",{"_index":154,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["abstract",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{}}}],["accepting",{"_index":929,"title":{},"body":{"index.html":{}}}],["addentitycreatedheaders",{"_index":420,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addentitycreatedheaders(res",{"_index":426,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addentitydeletedheaders",{"_index":421,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addentitydeletedheaders(res",{"_index":431,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addentityupdatedheaders",{"_index":422,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addentityupdatedheaders(res",{"_index":433,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addpaginationheaders",{"_index":423,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["addpaginationheaders(res",{"_index":435,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["again",{"_index":887,"title":{},"body":{"index.html":{}}}],["alert",{"_index":452,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["already",{"_index":787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["another",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["any).message",{"_index":526,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["api",{"_index":864,"title":{},"body":{"index.html":{}}}],["apiavailable",{"_index":866,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":260,"title":{},"body":{"controllers/CourseController.html":{}}}],["apioperation",{"_index":261,"title":{},"body":{"controllers/CourseController.html":{}}}],["apiproperty",{"_index":320,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["apiproperty()@isstring",{"_index":305,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["apiproperty({description",{"_index":307,"title":{},"body":{"classes/CourseDTO.html":{}}}],["apiproperty({isarray",{"_index":311,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["apiresponse",{"_index":262,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags",{"_index":263,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags('course",{"_index":279,"title":{},"body":{"controllers/CourseController.html":{}}}],["app",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app's",{"_index":856,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":893,"title":{},"body":{"index.html":{}}}],["application",{"_index":826,"title":{},"body":{"index.html":{}}}],["application's",{"_index":855,"title":{},"body":{"index.html":{}}}],["applicationname",{"_index":446,"title":{},"body":{"classes/HeaderUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":20,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":515,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["array",{"_index":312,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["array.isarray(message",{"_index":527,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["articletable.ts",{"_index":100,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"coverage.html":{}}}],["articletable.ts:14",{"_index":150,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:20",{"_index":156,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:26",{"_index":157,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:32",{"_index":130,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:39",{"_index":132,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:46",{"_index":134,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:53",{"_index":136,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:60",{"_index":159,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:66",{"_index":161,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:73",{"_index":163,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:80",{"_index":165,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:86",{"_index":174,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:9",{"_index":143,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable.ts:92",{"_index":168,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["articletable1655032066706",{"_index":97,"title":{"classes/ArticleTable1655032066706.html":{}},"body":{"classes/ArticleTable1655032066706.html":{},"coverage.html":{}}}],["artifacts",{"_index":850,"title":{},"body":{"index.html":{}}}],["asc",{"_index":570,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["ask",{"_index":924,"title":{},"body":{"index.html":{}}}],["asorder",{"_index":576,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["async",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["author",{"_index":941,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["automated",{"_index":890,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":878,"title":{},"body":{"index.html":{}}}],["available",{"_index":833,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":180,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["b40a0e52f1d8",{"_index":126,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["b6d7",{"_index":125,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["backend",{"_index":447,"title":{},"body":{"classes/HeaderUtil.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":193,"title":{},"body":{"classes/BaseDTO.html":{}}}],["base.dto",{"_index":324,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["base.entity",{"_index":564,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["base/base.entity",{"_index":233,"title":{},"body":{"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{}}}],["basedto",{"_index":189,"title":{"classes/BaseDTO.html":{}},"body":{"classes/BaseDTO.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{},"coverage.html":{}}}],["basedto:5",{"_index":318,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["basedto:7",{"_index":317,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["basedto:9",{"_index":319,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["baseentity",{"_index":202,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/Course.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/Sort.html":{},"entities/Student.html":{},"coverage.html":{}}}],["below",{"_index":820,"title":{},"body":{"index.html":{}}}],["between",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["big",{"_index":908,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["broke",{"_index":907,"title":{},"body":{"index.html":{}}}],["browse",{"_index":933,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":930,"title":{},"body":{"modules.html":{}}}],["build",{"_index":849,"title":{},"body":{"index.html":{}}}],["builds",{"_index":919,"title":{},"body":{"index.html":{}}}],["c",{"_index":593,"title":{},"body":{"entities/Professor.html":{},"entities/Student.html":{}}}],["c.professor",{"_index":594,"title":{},"body":{"entities/Professor.html":{}}}],["c.students",{"_index":671,"title":{},"body":{"entities/Student.html":{}}}],["c.students)@jointable",{"_index":667,"title":{},"body":{"entities/Student.html":{}}}],["c64b",{"_index":138,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["callhandler",{"_index":545,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["case",{"_index":841,"title":{},"body":{"index.html":{}}}],["catch",{"_index":511,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["catch(err",{"_index":644,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["catch(exception",{"_index":512,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":519,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(queryfailederror",{"_index":649,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["change",{"_index":880,"title":{},"body":{"index.html":{}}}],["check",{"_index":486,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["check.controllers",{"_index":506,"title":{},"body":{"modules/HealthModule.html":{}}}],["check.controllers.ts",{"_index":484,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["check.controllers.ts:14",{"_index":488,"title":{},"body":{"controllers/HealthController.html":{}}}],["check.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":502,"title":{},"body":{"modules/HealthModule.html":{}}}],["class",{"_index":23,"title":{"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":98,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"overview.html":{}}}],["cli",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["cloning",{"_index":809,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":403,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":404,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["code",{"_index":891,"title":{},"body":{"index.html":{}}}],["coding",{"_index":830,"title":{},"body":{"index.html":{}}}],["column",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{}}}],["column({nullable",{"_index":219,"title":{},"body":{"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{}}}],["command",{"_index":876,"title":{},"body":{"index.html":{}}}],["compile",{"_index":899,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":902,"title":{},"body":{"index.html":{}}}],["config",{"_index":847,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"database_url",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":815,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log(__dirname",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":285,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{}}}],["constructor",{"_index":357,"title":{},"body":{"injectables/CourseService.html":{},"controllers/HealthController.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"injectables/ProfessorService.html":{},"classes/Sort.html":{},"injectables/StudentService.html":{}}}],["constructor(@injectrepository(courserepository",{"_index":383,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(@injectrepository(professorrepository",{"_index":631,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["constructor(@injectrepository(studentrepository",{"_index":703,"title":{},"body":{"injectables/StudentService.html":{}}}],["constructor(content",{"_index":560,"title":{},"body":{"classes/Page.html":{}}}],["constructor(courserepository",{"_index":358,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(page",{"_index":581,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["constructor(private",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CourseController.html":{}}}],["constructor(professorrepository",{"_index":620,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["constructor(public",{"_index":586,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["constructor(sort",{"_index":572,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["constructor(studentrepository",{"_index":692,"title":{},"body":{"injectables/StudentService.html":{}}}],["container",{"_index":825,"title":{},"body":{"index.html":{}}}],["content",{"_index":558,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["contents",{"_index":843,"title":{},"body":{"index.html":{}}}],["context",{"_index":547,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.getclass().name}.${context.gethandler().name",{"_index":553,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":551,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["control",{"_index":853,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CourseController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CourseController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('courses",{"_index":277,"title":{},"body":{"controllers/CourseController.html":{}}}],["controller('health",{"_index":494,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CourseController.html":{},"modules/CoursesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["copy",{"_index":413,"title":{},"body":{"modules/CoursesModule.html":{},"injectables/StudentService.html":{}}}],["copy.ts",{"_index":687,"title":{},"body":{"classes/StudentRepository.html":{},"coverage.html":{}}}],["count",{"_index":290,"title":{},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{}}}],["courcesdto",{"_index":395,"title":{},"body":{"injectables/CourseService.html":{}}}],["courcesdto.push(coursemapper.fromentitytodto(cource",{"_index":398,"title":{},"body":{"injectables/CourseService.html":{}}}],["course",{"_index":118,"title":{"entities/Course.html":{}},"body":{"classes/ArticleTable1655032066706.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"coverage.html":{}}}],["course.entity",{"_index":598,"title":{},"body":{"entities/Professor.html":{},"entities/Student.html":{}}}],["course.givenname",{"_index":392,"title":{},"body":{"injectables/CourseService.html":{}}}],["course1",{"_index":104,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["course2",{"_index":105,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["course3",{"_index":106,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["course4",{"_index":107,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["course[field",{"_index":341,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursecontroller",{"_index":238,"title":{"controllers/CourseController.html":{}},"body":{"controllers/CourseController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursedto",{"_index":249,"title":{"classes/CourseDTO.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"coverage.html":{}}}],["coursedto[field",{"_index":342,"title":{},"body":{"classes/CourseMapper.html":{}}}],["courseexists",{"_index":399,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursemapper",{"_index":327,"title":{"classes/CourseMapper.html":{}},"body":{"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"coverage.html":{}}}],["coursemapper.fromentitytodto(result",{"_index":389,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursename",{"_index":254,"title":{},"body":{"controllers/CourseController.html":{}}}],["courserepository",{"_index":344,"title":{"classes/CourseRepository.html":{}},"body":{"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courses",{"_index":142,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{}}}],["courses'})@apiresponse({status",{"_index":247,"title":{},"body":{"controllers/CourseController.html":{}}}],["courseservice",{"_index":266,"title":{"injectables/CourseService.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coursesmodule",{"_index":47,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":714,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createalert",{"_index":424,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["createalert(res",{"_index":438,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["created",{"_index":455,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["createdatecolumn",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({type",{"_index":204,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createddate",{"_index":195,"title":{},"body":{"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["ctx",{"_index":520,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":523,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":522,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["dashes.ts",{"_index":842,"title":{},"body":{"index.html":{}}}],["database",{"_index":824,"title":{},"body":{"index.html":{}}}],["date",{"_index":198,"title":{},"body":{"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["date().toisostring",{"_index":537,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["db",{"_index":495,"title":{},"body":{"controllers/HealthController.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"controllers/HealthController.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{}}}],["default",{"_index":119,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/PageRequest.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{}}}],["definitions",{"_index":870,"title":{},"body":{"index.html":{}}}],["deleted",{"_index":461,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":571,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["described",{"_index":817,"title":{},"body":{"index.html":{}}}],["description",{"_index":191,"title":{},"body":{"classes/BaseDTO.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"properties.html":{}}}],["dev/prod",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":823,"title":{},"body":{"index.html":{}}}],["direction",{"_index":569,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["directory",{"_index":921,"title":{},"body":{"index.html":{}}}],["discovered",{"_index":915,"title":{},"body":{"index.html":{}}}],["dist",{"_index":848,"title":{},"body":{"index.html":{}}}],["dist/migrations/*{.ts,.js",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["docker",{"_index":808,"title":{},"body":{"index.html":{}}}],["dockerized",{"_index":882,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["domain/*.entity{.ts,.js",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/base/pagination.entity",{"_index":276,"title":{},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{}}}],["domain/course.entity",{"_index":348,"title":{},"body":{"classes/CourseRepository.html":{}}}],["down",{"_index":116,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"index.html":{}}}],["down(queryrunner",{"_index":166,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["down:dev",{"_index":888,"title":{},"body":{"index.html":{}}}],["dry",{"_index":900,"title":{},"body":{"index.html":{}}}],["dto",{"_index":192,"title":{},"body":{"classes/BaseDTO.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["dto/course.dto",{"_index":337,"title":{},"body":{"classes/CourseMapper.html":{},"injectables/CourseService.html":{}}}],["dto/professor.dto",{"_index":610,"title":{},"body":{"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{}}}],["dto/student.dto",{"_index":682,"title":{},"body":{"classes/StudentMapper.html":{},"injectables/StudentService.html":{}}}],["duplication",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplication_reference",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e.g",{"_index":884,"title":{},"body":{"index.html":{}}}],["e7d8b6d004fc",{"_index":155,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["editor",{"_index":818,"title":{},"body":{"index.html":{}}}],["email_exists",{"_index":792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enabletranslation",{"_index":450,"title":{},"body":{"classes/HeaderUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["encrypted",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["end",{"_index":918,"title":{},"body":{"index.html":{}}}],["entities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{},"overview.html":{}}}],["entity",{"_index":217,"title":{"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{}},"body":{"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["entity('course",{"_index":236,"title":{},"body":{"entities/Course.html":{}}}],["entity('professor",{"_index":599,"title":{},"body":{"entities/Professor.html":{}}}],["entity('student",{"_index":670,"title":{},"body":{"entities/Student.html":{}}}],["entityname",{"_index":428,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["entityrepository",{"_index":347,"title":{},"body":{"classes/CourseRepository.html":{},"classes/ProfessorRepository.html":{},"classes/StudentRepository.html":{}}}],["entityrepository(course",{"_index":349,"title":{},"body":{"classes/CourseRepository.html":{}}}],["entityrepository(professor",{"_index":616,"title":{},"body":{"classes/ProfessorRepository.html":{}}}],["entityrepository(student",{"_index":688,"title":{},"body":{"classes/StudentRepository.html":{}}}],["entry",{"_index":857,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":769,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/eng",{"_index":518,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["env",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["er_dup_entry",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["er_row_is_referenced_2",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":646,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["err.code",{"_index":650,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["error",{"_index":785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":655,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors",{"_index":379,"title":{},"body":{"injectables/CourseService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{}}}],["errors.conflict",{"_index":656,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.duplication",{"_index":651,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.duplication_reference",{"_index":652,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.enum",{"_index":381,"title":{},"body":{"injectables/CourseService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"injectables/StudentService.html":{}}}],["errors.enum.ts",{"_index":771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errors.internal_server_error",{"_index":662,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.key_is_referenced",{"_index":658,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.referenced",{"_index":659,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors.row_is_referenced",{"_index":657,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["errors[message",{"_index":535,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["especially",{"_index":903,"title":{},"body":{"index.html":{}}}],["exception",{"_index":517,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":509,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:13",{"_index":645,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["exception.filter.ts:8",{"_index":516,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":525,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":524,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":510,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["excluded",{"_index":851,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":543,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exercise",{"_index":449,"title":{},"body":{"classes/HeaderUtil.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exits",{"_index":788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["experience",{"_index":928,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{}}}],["exports",{"_index":418,"title":{},"body":{"modules/CoursesModule.html":{}}}],["expose",{"_index":565,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["express",{"_index":265,"title":{},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/QueryExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":237,"title":{},"body":{"entities/Course.html":{},"classes/CourseDTO.html":{},"classes/CourseRepository.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorRepository.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentRepository.html":{}}}],["extensions",{"_index":926,"title":{},"body":{"index.html":{}}}],["false",{"_index":326,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["false})@type(undefined",{"_index":314,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["fields",{"_index":338,"title":{},"body":{"classes/CourseMapper.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["fields.foreach(field",{"_index":340,"title":{},"body":{"classes/CourseMapper.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":838,"title":{},"body":{"index.html":{}}}],["find",{"_index":351,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["find(options",{"_index":360,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findandcount",{"_index":352,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findandcount(options",{"_index":364,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findbyfields",{"_index":353,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findbyfields(options",{"_index":366,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findbyid",{"_index":354,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findbyid(id",{"_index":369,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findmanyoptions",{"_index":361,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findoneoptions",{"_index":367,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["first",{"_index":474,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["following",{"_index":846,"title":{},"body":{"index.html":{}}}],["format",{"_index":889,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":892,"title":{},"body":{"index.html":{}}}],["fromdtotoentity",{"_index":331,"title":{},"body":{"classes/CourseMapper.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["fromdtotoentity(coursedto",{"_index":333,"title":{},"body":{"classes/CourseMapper.html":{}}}],["fromdtotoentity(professordto",{"_index":606,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["fromdtotoentity(studentdto",{"_index":678,"title":{},"body":{"classes/StudentMapper.html":{}}}],["fromentitytodto",{"_index":332,"title":{},"body":{"classes/CourseMapper.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["fromentitytodto(course",{"_index":335,"title":{},"body":{"classes/CourseMapper.html":{}}}],["fromentitytodto(professor",{"_index":608,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["fromentitytodto(student",{"_index":680,"title":{},"body":{"classes/StudentMapper.html":{}}}],["function",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":795,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"version",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/')@apioperation({description",{"_index":245,"title":{},"body":{"controllers/CourseController.html":{}}}],["get('/:id",{"_index":300,"title":{},"body":{"controllers/CourseController.html":{}}}],["get('/:id')@apioperation({description",{"_index":253,"title":{},"body":{"controllers/CourseController.html":{}}}],["get('version",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":487,"title":{},"body":{"controllers/HealthController.html":{}}}],["getallcourses",{"_index":241,"title":{},"body":{"controllers/CourseController.html":{}}}],["getallcourses(@req",{"_index":284,"title":{},"body":{"controllers/CourseController.html":{}}}],["getallcourses(req",{"_index":243,"title":{},"body":{"controllers/CourseController.html":{}}}],["getcoursebyid",{"_index":242,"title":{},"body":{"controllers/CourseController.html":{}}}],["getcoursebyid(@param('id",{"_index":301,"title":{},"body":{"controllers/CourseController.html":{}}}],["getcoursebyid(id",{"_index":252,"title":{},"body":{"controllers/CourseController.html":{}}}],["getcoursenamebyid",{"_index":355,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursenamebyid(id",{"_index":371,"title":{},"body":{"injectables/CourseService.html":{}}}],["getdbhealthcheck",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofessornamebyid",{"_index":618,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["getprofessornamebyid(id",{"_index":626,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["getrepository",{"_index":178,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["getrepository('course').save([this.course1",{"_index":182,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["getrepository('professor').save([this.prof1",{"_index":181,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["getrepository('student').save([this.user1",{"_index":185,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["getstudentnamebyid",{"_index":690,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentnamebyid(id",{"_index":698,"title":{},"body":{"injectables/StudentService.html":{}}}],["getting",{"_index":801,"title":{"index.html":{}},"body":{}}],["getversion",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["git",{"_index":813,"title":{},"body":{"index.html":{}}}],["givenname",{"_index":121,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"injectables/CourseService.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"injectables/ProfessorService.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"injectables/StudentService.html":{}}}],["glob",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":934,"title":{},"body":{"modules.html":{}}}],["happy",{"_index":829,"title":{},"body":{"index.html":{}}}],["headerutil",{"_index":271,"title":{"classes/HeaderUtil.html":{}},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{},"coverage.html":{}}}],["headerutil.addpaginationheaders(req.res",{"_index":298,"title":{},"body":{"controllers/CourseController.html":{}}}],["health",{"_index":485,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":489,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":490,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":482,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":49,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{}}}],["hooks",{"_index":814,"title":{},"body":{"index.html":{}}}],["host",{"_index":514,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":521,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["http",{"_index":496,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://localhost:3001",{"_index":877,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":513,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":507,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httphealthindicator",{"_index":491,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":503,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://www.google.com",{"_index":500,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpstatus",{"_index":647,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":654,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":661,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["id",{"_index":196,"title":{},"body":{"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"injectables/CourseService.html":{},"classes/ProfessorDTO.html":{},"injectables/ProfessorService.html":{},"classes/StudentDTO.html":{},"injectables/StudentService.html":{}}}],["id:'7104b456",{"_index":137,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["id:'84774417",{"_index":145,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["id:'cf9534e1",{"_index":151,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["id:'fbd5e540",{"_index":122,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["identifier",{"_index":456,"title":{},"body":{"classes/HeaderUtil.html":{},"coverage.html":{}}}],["image",{"_index":862,"title":{},"body":{"index.html":{}}}],["implement",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":101,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/QueryExceptionFilter.html":{}}}],["import",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{}}}],["important",{"_index":867,"title":{},"body":{"index.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/HealthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{}}}],["information",{"_index":836,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":883,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":316,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["inject",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/CourseService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CourseService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/CourseService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"overview.html":{}}}],["injectrepository",{"_index":377,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["install",{"_index":803,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":861,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":541,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":542,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["internal",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["internal_server_error",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isarray",{"_index":325,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["isglobal",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["isstring",{"_index":322,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["jest",{"_index":914,"title":{},"body":{"index.html":{}}}],["jointable",{"_index":229,"title":{},"body":{"entities/Course.html":{},"entities/Student.html":{}}}],["jsonproperty",{"_index":566,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["key_is_referenced",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["keyof",{"_index":530,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["last",{"_index":473,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["lastmodifieddate",{"_index":197,"title":{},"body":{"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["launches",{"_index":872,"title":{},"body":{"index.html":{}}}],["level",{"_index":860,"title":{},"body":{"index.html":{}}}],["license",{"_index":939,"title":{},"body":{"properties.html":{}}}],["links",{"_index":467,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["links.join",{"_index":476,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["links.push(this.preparelink(url",{"_index":469,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["lint",{"_index":895,"title":{},"body":{"index.html":{}}}],["lints",{"_index":896,"title":{},"body":{"index.html":{}}}],["list",{"_index":246,"title":{},"body":{"controllers/CourseController.html":{}}}],["logger",{"_index":256,"title":{},"body":{"controllers/CourseController.html":{},"injectables/LoggingInterceptor.html":{}}}],["logger('coursecontroller",{"_index":282,"title":{},"body":{"controllers/CourseController.html":{}}}],["logger.debug",{"_index":552,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logging",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["logginginterceptor",{"_index":269,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"controllers/CourseController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["lower",{"_index":840,"title":{},"body":{"index.html":{}}}],["mail",{"_index":793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":806,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":230,"title":{},"body":{"entities/Course.html":{},"entities/Student.html":{}}}],["manytomany(undefined",{"_index":225,"title":{},"body":{"entities/Course.html":{},"entities/Student.html":{}}}],["manytoone",{"_index":231,"title":{},"body":{"entities/Course.html":{},"entities/Professor.html":{}}}],["manytoone(undefined",{"_index":221,"title":{},"body":{"entities/Course.html":{}}}],["mapper",{"_index":329,"title":{},"body":{"classes/CourseMapper.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["mapper/course.mapper",{"_index":382,"title":{},"body":{"injectables/CourseService.html":{}}}],["mapper/professor.mapper",{"_index":630,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["mapper/student.mapper",{"_index":702,"title":{},"body":{"injectables/StudentService.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":439,"title":{},"body":{"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{}}}],["message.touppercase",{"_index":532,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["message[0",{"_index":528,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{}}}],["migrationinterface",{"_index":102,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["migrations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations_typeorm",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsdir",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsrun",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationstablename",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":768,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":874,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/HealthModule.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/HealthModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":835,"title":{},"body":{"index.html":{}}}],["msg",{"_index":529,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["name",{"_index":170,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":839,"title":{},"body":{"index.html":{}}}],["nest",{"_index":863,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":549,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":448,"title":{},"body":{"classes/HeaderUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nestjs/axios",{"_index":504,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CourseController.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":264,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":493,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["new",{"_index":281,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["next",{"_index":544,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["next.handle",{"_index":556,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["node.js",{"_index":804,"title":{},"body":{"index.html":{}}}],["note",{"_index":831,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":376,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["notfoundexception(errors.user_not_found",{"_index":402,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["nullable",{"_index":206,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Course.html":{},"entities/Professor.html":{},"entities/Student.html":{}}}],["number",{"_index":561,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["objct",{"_index":194,"title":{},"body":{"classes/BaseDTO.html":{}}}],["object",{"_index":304,"title":{},"body":{"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{}}}],["object.getownpropertynames(course",{"_index":343,"title":{},"body":{"classes/CourseMapper.html":{}}}],["object.getownpropertynames(coursedto",{"_index":339,"title":{},"body":{"classes/CourseMapper.html":{}}}],["object.getownpropertynames(professor",{"_index":614,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["object.getownpropertynames(professordto",{"_index":611,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["object.getownpropertynames(student",{"_index":686,"title":{},"body":{"classes/StudentMapper.html":{}}}],["object.getownpropertynames(studentdto",{"_index":683,"title":{},"body":{"classes/StudentMapper.html":{}}}],["observable",{"_index":548,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["onetomany",{"_index":232,"title":{},"body":{"entities/Course.html":{},"entities/Professor.html":{}}}],["onetomany(undefined",{"_index":592,"title":{},"body":{"entities/Professor.html":{}}}],["opening",{"_index":923,"title":{},"body":{"index.html":{}}}],["optional",{"_index":171,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":363,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["order",{"_index":296,"title":{},"body":{"controllers/CourseController.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["order[this.property",{"_index":577,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}],["outlined",{"_index":868,"title":{},"body":{"index.html":{}}}],["output",{"_index":898,"title":{},"body":{"index.html":{}}}],["overview",{"_index":935,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":222,"title":{},"body":{"entities/Course.html":{},"index.html":{}}}],["p.courses",{"_index":223,"title":{},"body":{"entities/Course.html":{}}}],["package",{"_index":741,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":871,"title":{},"body":{"index.html":{}}}],["page",{"_index":274,"title":{"classes/Page.html":{}},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["page(results",{"_index":299,"title":{},"body":{"controllers/CourseController.html":{}}}],["page.pageable.page",{"_index":465,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["page.pageable.size",{"_index":466,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["page.total",{"_index":472,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["page.total.tostring",{"_index":464,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["pageable",{"_index":559,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["pagenumber",{"_index":442,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["pagerequest",{"_index":275,"title":{"classes/PageRequest.html":{}},"body":{"controllers/CourseController.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["pagerequest(req.query.page",{"_index":288,"title":{},"body":{"controllers/CourseController.html":{}}}],["pagerequest.page",{"_index":293,"title":{},"body":{"controllers/CourseController.html":{}}}],["pagerequest.size",{"_index":294,"title":{},"body":{"controllers/CourseController.html":{}}}],["pagerequest.sort.asorder",{"_index":297,"title":{},"body":{"controllers/CourseController.html":{}}}],["pagesize",{"_index":443,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["param",{"_index":257,"title":{},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{}}}],["parameters",{"_index":169,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":453,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["parseuuidpipe",{"_index":258,"title":{},"body":{"controllers/CourseController.html":{}}}],["path",{"_index":538,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["pg",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["ping",{"_index":499,"title":{},"body":{"controllers/HealthController.html":{}}}],["point",{"_index":858,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":885,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":240,"title":{},"body":{"controllers/CourseController.html":{},"controllers/HealthController.html":{}}}],["preparelink",{"_index":425,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["preparelink(url",{"_index":441,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["prev",{"_index":471,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["primarygeneratedcolumn",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{}}}],["prints",{"_index":897,"title":{},"body":{"index.html":{}}}],["private",{"_index":384,"title":{},"body":{"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["prof1",{"_index":108,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["prof2",{"_index":109,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["prof3",{"_index":110,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["prof4",{"_index":111,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["professor",{"_index":127,"title":{"entities/Professor.html":{}},"body":{"classes/ArticleTable1655032066706.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"coverage.html":{}}}],["professor','students",{"_index":388,"title":{},"body":{"injectables/CourseService.html":{}}}],["professor.entity",{"_index":234,"title":{},"body":{"entities/Course.html":{}}}],["professor.givenname",{"_index":636,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["professor[field",{"_index":612,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["professordto",{"_index":600,"title":{"classes/ProfessorDTO.html":{}},"body":{"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"coverage.html":{}}}],["professordto[field",{"_index":613,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["professorexists",{"_index":641,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["professormapper",{"_index":604,"title":{"classes/ProfessorMapper.html":{}},"body":{"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"coverage.html":{}}}],["professormapper.fromentitytodto(result",{"_index":633,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["professorrepository",{"_index":409,"title":{"classes/ProfessorRepository.html":{}},"body":{"modules/CoursesModule.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"coverage.html":{}}}],["professorsdto",{"_index":638,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["professorsdto.push(professormapper.fromentitytodto(professor",{"_index":640,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["professorservice",{"_index":405,"title":{"injectables/ProfessorService.html":{}},"body":{"modules/CoursesModule.html":{},"injectables/ProfessorService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":172,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"properties.html":{}}}],["property",{"_index":568,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{}}}],["public",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["q",{"_index":226,"title":{},"body":{"entities/Course.html":{}}}],["q.courses",{"_index":227,"title":{},"body":{"entities/Course.html":{}}}],["queryexceptionfilter",{"_index":642,"title":{"classes/QueryExceptionFilter.html":{}},"body":{"classes/QueryExceptionFilter.html":{},"coverage.html":{}}}],["queryfailederror",{"_index":648,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["queryrunner",{"_index":167,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["readonly",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/CourseController.html":{}}}],["recommend",{"_index":922,"title":{},"body":{"index.html":{}}}],["refactoring",{"_index":909,"title":{},"body":{"index.html":{}}}],["referenced",{"_index":789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["references",{"_index":906,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["rel=\"${reltype",{"_index":481,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["relations",{"_index":387,"title":{},"body":{"injectables/CourseService.html":{}}}],["reload",{"_index":879,"title":{},"body":{"index.html":{}}}],["reltype",{"_index":444,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["repo",{"_index":844,"title":{},"body":{"index.html":{}}}],["repository",{"_index":346,"title":{},"body":{"classes/CourseRepository.html":{},"classes/ProfessorRepository.html":{},"classes/StudentRepository.html":{},"index.html":{}}}],["req",{"_index":251,"title":{},"body":{"controllers/CourseController.html":{},"injectables/LoggingInterceptor.html":{}}}],["req.method",{"_index":554,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.query.size",{"_index":289,"title":{},"body":{"controllers/CourseController.html":{}}}],["req.query.sort",{"_index":287,"title":{},"body":{"controllers/CourseController.html":{}}}],["req.url",{"_index":555,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request",{"_index":244,"title":{},"body":{"controllers/CourseController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/QueryExceptionFilter.html":{}}}],["request.url",{"_index":539,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["required",{"_index":308,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["res",{"_index":430,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.req.url",{"_index":462,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.set('link",{"_index":475,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.set('x",{"_index":451,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.status(200",{"_index":458,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.status(201",{"_index":454,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["res.status(204",{"_index":460,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}],["resource",{"_index":280,"title":{},"body":{"controllers/CourseController.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":427,"title":{},"body":{"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["response.status(httpstatus.conflict).json",{"_index":653,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":660,"title":{},"body":{"classes/QueryExceptionFilter.html":{}}}],["response.status(status).send",{"_index":533,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":385,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["resultlist",{"_index":393,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["resultlist[0",{"_index":396,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["resultlist[0].foreach(cource",{"_index":397,"title":{},"body":{"injectables/CourseService.html":{}}}],["resultlist[0].foreach(professor",{"_index":639,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["resultlist[0].foreach(student",{"_index":709,"title":{},"body":{"injectables/StudentService.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{}}}],["returncourseifexistsbyid",{"_index":356,"title":{},"body":{"injectables/CourseService.html":{}}}],["returncourseifexistsbyid(id",{"_index":373,"title":{},"body":{"injectables/CourseService.html":{}}}],["returnprofessorifexistsbyid",{"_index":619,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["returnprofessorifexistsbyid(id",{"_index":628,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["returnstudentifexistsbyid",{"_index":691,"title":{},"body":{"injectables/StudentService.html":{}}}],["returnstudentifexistsbyid(id",{"_index":700,"title":{},"body":{"injectables/StudentService.html":{}}}],["rimraf",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":811,"title":{},"body":{"index.html":{}}}],["row_is_referenced",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":810,"title":{},"body":{"index.html":{}}}],["running",{"_index":875,"title":{},"body":{"index.html":{}}}],["runs",{"_index":873,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":550,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["script",{"_index":869,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":834,"title":{},"body":{"index.html":{}}}],["seamless",{"_index":927,"title":{},"body":{"index.html":{}}}],["section",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":832,"title":{},"body":{"index.html":{}}}],["server",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["set",{"_index":812,"title":{},"body":{"index.html":{}}}],["setup",{"_index":819,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shut",{"_index":886,"title":{},"body":{"index.html":{}}}],["size",{"_index":578,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["skip",{"_index":292,"title":{},"body":{"controllers/CourseController.html":{}}}],["somewhere",{"_index":791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":567,"title":{"classes/Sort.html":{}},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["sort('id,asc",{"_index":580,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["sort(sort",{"_index":585,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["sort.split",{"_index":575,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["sortfield",{"_index":286,"title":{},"body":{"controllers/CourseController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"modules/CoursesModule.html":{},"classes/HeaderUtil.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["spec.{ts,tsx",{"_index":916,"title":{},"body":{"index.html":{}}}],["src",{"_index":854,"title":{},"body":{"index.html":{}}}],["src/.../eng",{"_index":770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../header",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:10",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:9",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controllers/rest/course.controller",{"_index":408,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/controllers/rest/course.controller.ts",{"_index":239,"title":{},"body":{"controllers/CourseController.html":{},"coverage.html":{}}}],["src/controllers/rest/course.controller.ts:27",{"_index":250,"title":{},"body":{"controllers/CourseController.html":{}}}],["src/controllers/rest/course.controller.ts:46",{"_index":255,"title":{},"body":{"controllers/CourseController.html":{}}}],["src/controllers/rest/health",{"_index":483,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["src/domain/base/base.entity.ts",{"_index":203,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/domain/base/base.entity.ts:11",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/base/base.entity.ts:5",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/base/base.entity.ts:8",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/base/pagination.entity.ts",{"_index":557,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["src/domain/base/pagination.entity.ts:14",{"_index":665,"title":{},"body":{"classes/Sort.html":{}}}],["src/domain/base/pagination.entity.ts:23",{"_index":588,"title":{},"body":{"classes/PageRequest.html":{}}}],["src/domain/base/pagination.entity.ts:25",{"_index":589,"title":{},"body":{"classes/PageRequest.html":{}}}],["src/domain/base/pagination.entity.ts:27",{"_index":587,"title":{},"body":{"classes/PageRequest.html":{}}}],["src/domain/base/pagination.entity.ts:36",{"_index":562,"title":{},"body":{"classes/Page.html":{}}}],["src/domain/base/pagination.entity.ts:37",{"_index":563,"title":{},"body":{"classes/Page.html":{}}}],["src/domain/base/pagination.entity.ts:6",{"_index":664,"title":{},"body":{"classes/Sort.html":{}}}],["src/domain/base/pagination.entity.ts:7",{"_index":663,"title":{},"body":{"classes/Sort.html":{}}}],["src/domain/course.entity",{"_index":175,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/CourseMapper.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["src/domain/course.entity.ts",{"_index":218,"title":{},"body":{"entities/Course.html":{},"coverage.html":{}}}],["src/domain/course.entity.ts:12",{"_index":224,"title":{},"body":{"entities/Course.html":{}}}],["src/domain/course.entity.ts:15",{"_index":228,"title":{},"body":{"entities/Course.html":{}}}],["src/domain/course.entity.ts:9",{"_index":220,"title":{},"body":{"entities/Course.html":{}}}],["src/domain/professor.entity",{"_index":176,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/CourseDTO.html":{},"classes/ProfessorMapper.html":{},"classes/ProfessorRepository.html":{}}}],["src/domain/professor.entity.ts",{"_index":591,"title":{},"body":{"entities/Professor.html":{},"coverage.html":{}}}],["src/domain/professor.entity.ts:11",{"_index":595,"title":{},"body":{"entities/Professor.html":{}}}],["src/domain/professor.entity.ts:8",{"_index":597,"title":{},"body":{"entities/Professor.html":{}}}],["src/domain/student.entity",{"_index":177,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/CourseDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{}}}],["src/domain/student.entity.ts",{"_index":666,"title":{},"body":{"entities/Student.html":{},"coverage.html":{}}}],["src/domain/student.entity.ts:12",{"_index":668,"title":{},"body":{"entities/Student.html":{}}}],["src/domain/student.entity.ts:8",{"_index":669,"title":{},"body":{"entities/Student.html":{}}}],["src/main.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/migrations/1655032066706",{"_index":99,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"coverage.html":{}}}],["src/module/courses.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/module/courses.module.ts",{"_index":407,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/module/health",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["src/repository/course.repository",{"_index":378,"title":{},"body":{"injectables/CourseService.html":{},"modules/CoursesModule.html":{}}}],["src/repository/course.repository.ts",{"_index":345,"title":{},"body":{"classes/CourseRepository.html":{},"coverage.html":{}}}],["src/repository/professor.repository",{"_index":410,"title":{},"body":{"modules/CoursesModule.html":{},"injectables/ProfessorService.html":{}}}],["src/repository/professor.repository.ts",{"_index":615,"title":{},"body":{"classes/ProfessorRepository.html":{},"coverage.html":{}}}],["src/repository/student.repository",{"_index":412,"title":{},"body":{"modules/CoursesModule.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["src/service/course.service",{"_index":267,"title":{},"body":{"controllers/CourseController.html":{},"modules/CoursesModule.html":{}}}],["src/service/course.service.ts",{"_index":350,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/service/course.service.ts:11",{"_index":359,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:14",{"_index":370,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:19",{"_index":368,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:24",{"_index":362,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:29",{"_index":372,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:34",{"_index":365,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/course.service.ts:44",{"_index":374,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/service/dto/base.dto.ts",{"_index":190,"title":{},"body":{"classes/BaseDTO.html":{},"coverage.html":{}}}],["src/service/dto/base.dto.ts:5",{"_index":200,"title":{},"body":{"classes/BaseDTO.html":{}}}],["src/service/dto/base.dto.ts:7",{"_index":199,"title":{},"body":{"classes/BaseDTO.html":{}}}],["src/service/dto/base.dto.ts:9",{"_index":201,"title":{},"body":{"classes/BaseDTO.html":{}}}],["src/service/dto/course.dto",{"_index":268,"title":{},"body":{"controllers/CourseController.html":{}}}],["src/service/dto/course.dto.ts",{"_index":303,"title":{},"body":{"classes/CourseDTO.html":{},"coverage.html":{}}}],["src/service/dto/course.dto.ts:13",{"_index":306,"title":{},"body":{"classes/CourseDTO.html":{}}}],["src/service/dto/course.dto.ts:17",{"_index":310,"title":{},"body":{"classes/CourseDTO.html":{}}}],["src/service/dto/course.dto.ts:25",{"_index":315,"title":{},"body":{"classes/CourseDTO.html":{}}}],["src/service/dto/professor.dto.ts",{"_index":601,"title":{},"body":{"classes/ProfessorDTO.html":{},"coverage.html":{}}}],["src/service/dto/professor.dto.ts:12",{"_index":603,"title":{},"body":{"classes/ProfessorDTO.html":{}}}],["src/service/dto/professor.dto.ts:20",{"_index":602,"title":{},"body":{"classes/ProfessorDTO.html":{}}}],["src/service/dto/student.dto.ts",{"_index":673,"title":{},"body":{"classes/StudentDTO.html":{},"coverage.html":{}}}],["src/service/dto/student.dto.ts:12",{"_index":675,"title":{},"body":{"classes/StudentDTO.html":{}}}],["src/service/dto/student.dto.ts:20",{"_index":674,"title":{},"body":{"classes/StudentDTO.html":{}}}],["src/service/mapper/course.mapper.ts",{"_index":328,"title":{},"body":{"classes/CourseMapper.html":{},"coverage.html":{}}}],["src/service/mapper/course.mapper.ts:20",{"_index":336,"title":{},"body":{"classes/CourseMapper.html":{}}}],["src/service/mapper/course.mapper.ts:8",{"_index":334,"title":{},"body":{"classes/CourseMapper.html":{}}}],["src/service/mapper/professor.mapper.ts",{"_index":605,"title":{},"body":{"classes/ProfessorMapper.html":{},"coverage.html":{}}}],["src/service/mapper/professor.mapper.ts:20",{"_index":609,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["src/service/mapper/professor.mapper.ts:8",{"_index":607,"title":{},"body":{"classes/ProfessorMapper.html":{}}}],["src/service/mapper/student.mapper.ts",{"_index":677,"title":{},"body":{"classes/StudentMapper.html":{},"coverage.html":{}}}],["src/service/mapper/student.mapper.ts:20",{"_index":681,"title":{},"body":{"classes/StudentMapper.html":{}}}],["src/service/mapper/student.mapper.ts:8",{"_index":679,"title":{},"body":{"classes/StudentMapper.html":{}}}],["src/service/professor.service",{"_index":414,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/service/professor.service.ts",{"_index":617,"title":{},"body":{"injectables/ProfessorService.html":{},"coverage.html":{}}}],["src/service/professor.service.ts:12",{"_index":621,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:15",{"_index":625,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:20",{"_index":624,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:25",{"_index":622,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:30",{"_index":627,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:35",{"_index":623,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/professor.service.ts:45",{"_index":629,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/service/student.service",{"_index":415,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/service/student.service.ts",{"_index":689,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/service/student.service.ts:11",{"_index":693,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:14",{"_index":697,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:19",{"_index":696,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:24",{"_index":694,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:29",{"_index":695,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:39",{"_index":699,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/service/student.service.ts:44",{"_index":701,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/shared/exceptions/enums/eng",{"_index":380,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{}}}],["src/shared/exceptions/http",{"_index":508,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/exceptions/query",{"_index":643,"title":{},"body":{"classes/QueryExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interceptors/logging.interceptor",{"_index":270,"title":{},"body":{"controllers/CourseController.html":{}}}],["src/shared/interceptors/logging.interceptor.ts",{"_index":540,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/logging.interceptor.ts:7",{"_index":546,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/utils/header",{"_index":272,"title":{},"body":{"controllers/CourseController.html":{},"classes/HeaderUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger.ts",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":822,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":828,"title":{},"body":{"index.html":{}}}],["started",{"_index":802,"title":{"index.html":{}},"body":{"index.html":{}}}],["starts",{"_index":881,"title":{},"body":{"index.html":{}}}],["statements",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":330,"title":{},"body":{"classes/CourseMapper.html":{},"classes/HeaderUtil.html":{},"classes/ProfessorMapper.html":{},"classes/StudentMapper.html":{}}}],["status",{"_index":283,"title":{},"body":{"controllers/CourseController.html":{},"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":534,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["stored",{"_index":920,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"injectables/ProfessorService.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":837,"title":{},"body":{"index.html":{}}}],["structured",{"_index":845,"title":{},"body":{"index.html":{}}}],["student",{"_index":144,"title":{"entities/Student.html":{}},"body":{"classes/ArticleTable1655032066706.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["student.entity",{"_index":235,"title":{},"body":{"entities/Course.html":{}}}],["student.givenname",{"_index":712,"title":{},"body":{"injectables/StudentService.html":{}}}],["student[field",{"_index":684,"title":{},"body":{"classes/StudentMapper.html":{}}}],["studentdto",{"_index":672,"title":{"classes/StudentDTO.html":{}},"body":{"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentdto[field",{"_index":685,"title":{},"body":{"classes/StudentMapper.html":{}}}],["studentexists",{"_index":713,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentmapper",{"_index":676,"title":{"classes/StudentMapper.html":{}},"body":{"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentmapper.fromentitytodto(result",{"_index":705,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentrepository",{"_index":411,"title":{"classes/StudentRepository.html":{}},"body":{"modules/CoursesModule.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["students",{"_index":129,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{}}}],["studentsdto",{"_index":708,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentsdto.push(studentmapper.fromentitytodto(student",{"_index":710,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":406,"title":{"injectables/StudentService.html":{}},"body":{"modules/CoursesModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentservice,professorservice,courseservice",{"_index":417,"title":{},"body":{"modules/CoursesModule.html":{}}}],["support",{"_index":931,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":932,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["synchronize",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":437,"title":{},"body":{"classes/HeaderUtil.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{},"index.html":{}}}],["table",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":295,"title":{},"body":{"controllers/CourseController.html":{}}}],["terminusmodule",{"_index":505,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":910,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":917,"title":{},"body":{"index.html":{}}}],["tests",{"_index":912,"title":{},"body":{"index.html":{}}}],["this.appservice.getversion",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.course1",{"_index":162,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.course1,this.course2",{"_index":158,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.course2",{"_index":183,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.course3",{"_index":184,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.course3,this.course4",{"_index":160,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.course4",{"_index":164,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.courserepository.findandcount(options",{"_index":394,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courserepository.findone(id",{"_index":386,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courserepository.findone(options",{"_index":390,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.findandcount",{"_index":291,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.courseservice.findbyid(id",{"_index":302,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.createalert(res",{"_index":457,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["this.db.pingcheck('database",{"_index":501,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.direction",{"_index":574,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["this.findbyid(id",{"_index":400,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["this.health.check",{"_index":497,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('internet",{"_index":498,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.page",{"_index":582,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["this.prof1",{"_index":128,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.prof2",{"_index":131,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.prof3",{"_index":133,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.prof4",{"_index":135,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.professorrepository.findandcount(options",{"_index":637,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["this.professorrepository.findone(id",{"_index":632,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["this.professorrepository.findone(options",{"_index":634,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["this.property",{"_index":573,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["this.returncourseifexistsbyid(id",{"_index":391,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.returnprofessorifexistsbyid(id",{"_index":635,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["this.returnstudentifexistsbyid(id",{"_index":711,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.size",{"_index":583,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["this.sort",{"_index":584,"title":{},"body":{"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["this.studentrepository.findandcount(options",{"_index":707,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.findone(id",{"_index":704,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.findone(options",{"_index":706,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.user2",{"_index":186,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.user3",{"_index":187,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["this.user4",{"_index":188,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["throw",{"_index":401,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["timestamp",{"_index":536,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["timestamptz",{"_index":205,"title":{},"body":{"classes/BaseEntity.html":{}}}],["top",{"_index":859,"title":{},"body":{"index.html":{}}}],["total",{"_index":463,"title":{},"body":{"classes/HeaderUtil.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/Sort.html":{}}}],["transformer",{"_index":321,"title":{},"body":{"classes/CourseDTO.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"classes/ProfessorDTO.html":{},"classes/Sort.html":{},"classes/StudentDTO.html":{},"dependencies.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"classes/CourseDTO.html":{},"classes/HeaderUtil.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":309,"title":{},"body":{"classes/CourseDTO.html":{}}}],["type",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleTable1655032066706.html":{},"classes/BaseDTO.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseDTO.html":{},"classes/CourseMapper.html":{},"injectables/CourseService.html":{},"classes/HeaderUtil.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/Page.html":{},"classes/PageRequest.html":{},"entities/Professor.html":{},"classes/ProfessorDTO.html":{},"classes/ProfessorMapper.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"classes/Sort.html":{},"entities/Student.html":{},"classes/StudentDTO.html":{},"classes/StudentMapper.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type(undefined",{"_index":590,"title":{},"body":{"classes/PageRequest.html":{}}}],["typeof",{"_index":531,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["typeorm",{"_index":179,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/BaseEntity.html":{},"entities/Course.html":{},"classes/CourseRepository.html":{},"injectables/CourseService.html":{},"entities/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QueryExceptionFilter.html":{},"entities/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":492,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{}}}],["typeormmodule.forfeature([studentrepository",{"_index":416,"title":{},"body":{"modules/CoursesModule.html":{}}}],["typeormmodule.forrootasync",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":894,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":901,"title":{},"body":{"index.html":{}}}],["ui",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["unique",{"_index":596,"title":{},"body":{"entities/Professor.html":{},"entities/Student.html":{}}}],["unit",{"_index":911,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":375,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["unlicensed",{"_index":940,"title":{},"body":{"properties.html":{}}}],["up",{"_index":117,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"index.html":{}}}],["up(queryrunner",{"_index":173,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["up:dev",{"_index":821,"title":{},"body":{"index.html":{}}}],["updated",{"_index":459,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["updatedatecolumn",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({type",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{}}}],["url",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/HeaderUtil.html":{}}}],["url('http://localhost",{"_index":477,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["url.searchparams.set('page",{"_index":478,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["url.searchparams.set('size",{"_index":479,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["url.tostring().replace('http://localhost",{"_index":480,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["used",{"_index":790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usefactory",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":904,"title":{},"body":{"index.html":{}}}],["useinterceptors",{"_index":259,"title":{},"body":{"controllers/CourseController.html":{}}}],["useinterceptors(logginginterceptor",{"_index":278,"title":{},"body":{"controllers/CourseController.html":{}}}],["user1",{"_index":112,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["user2",{"_index":113,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["user3",{"_index":114,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["user4",{"_index":115,"title":{},"body":{"classes/ArticleTable1655032066706.html":{}}}],["user_not_found",{"_index":773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_unauthorized",{"_index":772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users",{"_index":313,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{}}}],["using",{"_index":827,"title":{},"body":{"index.html":{}}}],["util",{"_index":273,"title":{},"body":{"controllers/CourseController.html":{}}}],["util.ts",{"_index":419,"title":{},"body":{"classes/HeaderUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.ts:13",{"_index":429,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["util.ts:21",{"_index":434,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["util.ts:29",{"_index":432,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["util.ts:37",{"_index":436,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["util.ts:54",{"_index":445,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["util.ts:8",{"_index":440,"title":{},"body":{"classes/HeaderUtil.html":{}}}],["validator",{"_index":323,"title":{},"body":{"classes/CourseDTO.html":{},"classes/ProfessorDTO.html":{},"classes/StudentDTO.html":{},"dependencies.html":{}}}],["value",{"_index":120,"title":{},"body":{"classes/ArticleTable1655032066706.html":{},"classes/PageRequest.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":942,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":852,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":913,"title":{},"body":{"index.html":{}}}],["void",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryExceptionFilter.html":{}}}],["vscode",{"_index":816,"title":{},"body":{"index.html":{}}}],["want",{"_index":925,"title":{},"body":{"index.html":{}}}],["way",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["well",{"_index":807,"title":{},"body":{"index.html":{}}}],["whether",{"_index":905,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":805,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('version')\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\n\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get(\"version\")\n  public getVersion(): string {\n    return this.appService.getVersion();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CoursesModule } from 'src/module/courses.module';\nimport { HealthModule } from 'src/module/health-check.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nconsole.log(__dirname);\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule, CoursesModule, HealthModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        type: \"postgres\",\n        url: configService.get(\"DATABASE_URL\"),\n        synchronize: true,\n        autoLoadEntities: true,\n        // i prefer to implement this section in another way so i can switch between dev/prod env\n        entities: [__dirname + '/domain/*.entity{.ts,.js}'],\n        migrations: [\"dist/migrations/*{.ts,.js}\"],\n        migrationsTableName: \"migrations_typeorm\",\n        migrationsRun: true,\n        cli: {\n          migrationsDir: 'src/migrations',\n        },\n        logging: true,\n      }),\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDBHealthCheck\n                            \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDBHealthCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDBHealthCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  public getVersion(): string {\n    return \"0.0.1\";\n  }\n\n  public getDBHealthCheck(){\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleTable1655032066706.html":{"url":"classes/ArticleTable1655032066706.html","title":"class - ArticleTable1655032066706","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleTable1655032066706\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1655032066706-ArticleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course1\n                            \n                            \n                                course2\n                            \n                            \n                                course3\n                            \n                            \n                                course4\n                            \n                            \n                                prof1\n                            \n                            \n                                prof2\n                            \n                            \n                                prof3\n                            \n                            \n                                prof4\n                            \n                            \n                                user1\n                            \n                            \n                                user2\n                            \n                            \n                                user3\n                            \n                            \n                                user4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Default value : {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof1,\n        students:[]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        course2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Default value : {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof2,\n        students:[]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        course3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Default value : {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof3,\n        students:[]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        course4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Default value : {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof4,\n        students:[]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prof1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professor\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'7104b456-c64b-4c0e-8e33-293d95d389b3',\n        givenName: 'prof1',\n        courses: []\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prof2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'84774417-9508-469a-9d0c-9e8a5ec019d7',\n        givenName: 'prof2',\n        courses: []\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prof3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'cf9534e1-6b28-449b-a367-e7d8b6d004fc',\n        givenName: 'prof3',\n        courses: []\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prof4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        givenName: 'prof4',\n        courses: []\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'7104b456-c64b-4c0e-8e33-293d95d389b3',\n        givenName: 'user1',\n        courses: [this.course1,this.course2]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'84774417-9508-469a-9d0c-9e8a5ec019d7',\n        givenName: 'user2',\n        courses: [this.course3,this.course4]\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'cf9534e1-6b28-449b-a367-e7d8b6d004fc',\n        givenName: 'user3',\n        courses: [this.course1]\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Default value : {\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        givenName: 'user4',\n        courses: [this.course4]\n    }\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655032066706-ArticleTable.ts:80\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655032066706-ArticleTable.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655032066706-ArticleTable.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from 'src/domain/course.entity';\nimport { Professor } from 'src/domain/professor.entity';\nimport { Student } from 'src/domain/student.entity';\nimport { getRepository, MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class ArticleTable1655032066706 implements MigrationInterface {\n\n \n    prof1: Professor = {\n        id:'7104b456-c64b-4c0e-8e33-293d95d389b3',\n        givenName: 'prof1',\n        courses: []\n    };\n    prof2: Student = {\n        id:'84774417-9508-469a-9d0c-9e8a5ec019d7',\n        givenName: 'prof2',\n        courses: []\n\n    };\n    prof3: Student = {\n        id:'cf9534e1-6b28-449b-a367-e7d8b6d004fc',\n        givenName: 'prof3',\n        courses: []\n\n    };\n    prof4: Student = {\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        givenName: 'prof4',\n        courses: []\n    };\n\n    course1: Course = {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof1,\n        students:[]\n    }\n\n    course2: Course = {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof2,\n        students:[]\n    }\n\n    course3: Course = {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof3,\n        students:[]\n    }\n\n    course4: Course = {\n        givenName: 'course1',\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        professor: this.prof4,\n        students:[]\n    } \n\n    user1: Student = {\n        id:'7104b456-c64b-4c0e-8e33-293d95d389b3',\n        givenName: 'user1',\n        courses: [this.course1,this.course2]\n    };\n\n    user2: Student = {\n        id:'84774417-9508-469a-9d0c-9e8a5ec019d7',\n        givenName: 'user2',\n        courses: [this.course3,this.course4]\n\n    };\n    \n    user3: Student = {\n        id:'cf9534e1-6b28-449b-a367-e7d8b6d004fc',\n        givenName: 'user3',\n        courses: [this.course1]\n\n    };\n\n    user4: Student = {\n        id:'fbd5e540-261a-419a-b6d7-b40a0e52f1d8',\n        givenName: 'user4',\n        courses: [this.course4]\n    };\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await getRepository('professor').save([this.prof1, this.prof2, this.prof3, this.prof4]);\n        await getRepository('course').save([this.course1, this.course2, this.course3, this.course4]);\n        await getRepository('student').save([this.user1, this.user2, this.user3, this.user4]);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDTO.html":{"url":"classes/BaseDTO.html","title":"class - BaseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/base.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                A DTO base objct.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastModifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/service/dto/base.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/service/dto/base.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/service/dto/base.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseDTO {\n    id?: string;\n\n    createdDate?: Date;\n\n    lastModifiedDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/base/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastModifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/base.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/base.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/base.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, Column } from 'typeorm';\n\nexport abstract class BaseEntity {\n    @PrimaryGeneratedColumn('uuid')\n    id?: string;\n  \n    @CreateDateColumn({ type: 'timestamptz', nullable: true })\n    createdDate?: Date;\n\n    @UpdateDateColumn({ type: 'timestamptz', nullable: true })\n    lastModifiedDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Course.html":{"url":"entities/Course.html","title":"entity - Course","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/course.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                givenName\n                            \n                            \n                                professor\n                            \n                            \n                                students\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/course.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        professor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, p => p.courses)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/course.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, q => q.courses)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/course.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinTable, ManyToMany, ManyToOne, OneToMany } from 'typeorm';\nimport { BaseEntity } from './base/base.entity';\nimport { Professor } from './professor.entity';\nimport { Student } from './student.entity';\n\n@Entity('course')\nexport class Course extends BaseEntity {\n    @Column({ nullable: true })\n    givenName: string;\n\n    @ManyToOne(() => Professor, p => p.courses)\n    professor: Professor;\n\n    @ManyToMany(() => Student, (q) => q.courses)\n    students: Student[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CourseController.html":{"url":"controllers/CourseController.html","title":"controller - CourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/rest/course.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllCourses\n                            \n                            \n                                    Async\n                                getCourseById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCourses(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiOperation({description: 'Get the list of courses'})@ApiResponse({status: 200, description: 'List all courses', type: CourseDTO})\n                \n            \n\n            \n                \n                    Defined in src/controllers/rest/course.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({description: 'Get the list of courses'})@ApiResponse({status: 200, description: 'get CourseName By Id', type: CourseDTO})\n                \n            \n\n            \n                \n                    Defined in src/controllers/rest/course.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Logger, Param, ParseUUIDPipe, Req, UseInterceptors } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { CourseService } from 'src/service/course.service';\nimport { CourseDTO } from 'src/service/dto/course.dto';\nimport { LoggingInterceptor } from 'src/shared/interceptors/logging.interceptor';\nimport { HeaderUtil } from 'src/shared/utils/header-util';\n\nimport { Page, PageRequest } from '../../domain/base/pagination.entity';\n\n@Controller('courses')\n@UseInterceptors(LoggingInterceptor)\n@ApiBearerAuth()\n@ApiTags('course-resource')\nexport class CourseController {\n    logger = new Logger('CourseController');\n\n    constructor(private readonly courseService: CourseService) { }\n\n    @Get('/')\n    @ApiOperation({ description: 'Get the list of courses' })\n    @ApiResponse({\n        status: 200,\n        description: 'List all courses',\n        type: CourseDTO,\n    })\n    async getAllCourses(@Req() req: Request): Promise {\n        const sortField = req.query.sort;\n        const pageRequest: PageRequest = new PageRequest(req.query.page, req.query.size, sortField);\n        const [results, count] = await this.courseService.findAndCount({\n            skip: +pageRequest.page * pageRequest.size,\n            take: +pageRequest.size,\n            order: pageRequest.sort.asOrder(),\n        });\n        HeaderUtil.addPaginationHeaders(req.res, new Page(results, count, pageRequest));\n        return results;\n    }\n\n    @Get('/:id')\n    @ApiOperation({ description: 'Get the list of courses' })\n    @ApiResponse({\n        status: 200,\n        description: 'get CourseName By Id',\n        type: CourseDTO,\n    })\n    async getCourseById(@Param('id', ParseUUIDPipe) id: string): Promise {\n        return this.courseService.findById(id);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDTO.html":{"url":"classes/CourseDTO.html","title":"class - CourseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/course.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                An Course DTO object.\n\n            \n\n            \n                Extends\n            \n            \n                        BaseDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                givenName\n                            \n                            \n                                professor\n                            \n                            \n                                students\n                            \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastModifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/course.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        professor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Professor', required: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/course.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, description: 'Array of users', required: false})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/course.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\nimport { Professor } from 'src/domain/professor.entity';\nimport { Student } from 'src/domain/student.entity';\nimport { BaseDTO } from './base.dto';\n/**\n * An Course DTO object.\n */\nexport class CourseDTO extends BaseDTO {\n    @ApiProperty()\n    @IsString()\n    givenName: string;\n\n    @ApiProperty({description: 'Professor', required: true })\n    @Type(() => Professor)\n    professor: Professor\n\n    @ApiProperty({\n        isArray: true,\n        description: 'Array of users',\n        required: false,\n    })\n    @Type(() => Student)\n    students: Student[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMapper.html":{"url":"classes/CourseMapper.html","title":"class - CourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/mapper/course.mapper.ts\n        \n\n\n            \n                Description\n            \n            \n                An Course mapper object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDTOtoEntity\n                            \n                            \n                                    Static\n                                fromEntityToDTO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromDTOtoEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromDTOtoEntity(courseDTO: CourseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/course.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseDTO\n                                    \n                                                CourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromEntityToDTO\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromEntityToDTO(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/course.mapper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from 'src/domain/course.entity';\nimport { CourseDTO } from '../dto/course.dto';\n\n/**\n * An Course mapper object.\n */\nexport class CourseMapper {\n    static fromDTOtoEntity(courseDTO: CourseDTO): Course {\n        if (!courseDTO) {\n            return;\n        }\n        const course = new Course();\n        const fields = Object.getOwnPropertyNames(courseDTO);\n        fields.forEach(field => {\n            course[field] = courseDTO[field];\n        });\n        return course;\n    }\n\n    static fromEntityToDTO(course: Course): CourseDTO {\n        if (!course) {\n            return;\n        }\n        const courseDTO = new CourseDTO();\n\n        const fields = Object.getOwnPropertyNames(course);\n\n        fields.forEach(field => {\n            courseDTO[field] = course[field];\n        });\n\n        return courseDTO;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseRepository.html":{"url":"classes/CourseRepository.html","title":"class - CourseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repository/course.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Course } from '../domain/course.entity';\n\n@EntityRepository(Course)\nexport class CourseRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/course.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAndCount\n                            \n                            \n                                    Async\n                                findByfields\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getCourseNameById\n                            \n                            \n                                    Async\n                                returnCourseIfExistsById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/service/course.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCount(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByfields\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByfields(options: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOneOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseNameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseNameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        returnCourseIfExistsById\n                        \n                    \n                \n            \n            \n                \n                    \n                    returnCourseIfExistsById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/course.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CourseRepository } from 'src/repository/course.repository';\nimport { Errors } from 'src/shared/Exceptions/enums/eng-errors.enum';\nimport { FindManyOptions, FindOneOptions } from 'typeorm';\n\nimport { CourseDTO } from './dto/course.dto';\nimport { CourseMapper } from './mapper/course.mapper';\n\n@Injectable()\nexport class CourseService {\n    constructor(@InjectRepository(CourseRepository) private courseRepository: CourseRepository) { }\n\n    async findById(id: string): Promise {\n        const result = await this.courseRepository.findOne(id, { relations: ['professor','students'] });\n        return CourseMapper.fromEntityToDTO(result);\n    }\n\n    async findByfields(options: FindOneOptions): Promise {\n        const result = await this.courseRepository.findOne(options);\n        return CourseMapper.fromEntityToDTO(result);\n    }\n\n    async find(options: FindManyOptions): Promise {\n        const result = await this.courseRepository.findOne(options);\n        return CourseMapper.fromEntityToDTO(result);\n    }\n\n    async getCourseNameById(id: string): Promise {\n        const course = await this.returnCourseIfExistsById(id);\n        return { givenName: course.givenName }\n    }\n\n    async findAndCount(options: FindManyOptions): Promise {\n        const resultList = await this.courseRepository.findAndCount(options);\n        const courcesDTO: CourseDTO[] = [];\n        if (resultList && resultList[0]) {\n            resultList[0].forEach(cource => courcesDTO.push(CourseMapper.fromEntityToDTO(cource)));\n            resultList[0] = courcesDTO;\n        }\n        return resultList;\n    }\n\n    async returnCourseIfExistsById(id: string) {\n        const courseExists = await this.findById(id);\n        if (!courseExists) {\n            throw new NotFoundException(Errors.USER_NOT_FOUND);\n        } else {\n            return courseExists;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCourseService\n\nCourseService\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nCourseService->CoursesModule\n\n\n\n\n\nProfessorService\n\nProfessorService\n\nCoursesModule -->\n\nProfessorService->CoursesModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nCoursesModule -->\n\nStudentService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/courses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseService\n                        \n                        \n                            ProfessorService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CourseController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CourseController } from 'src/controllers/rest/course.controller';\nimport { CourseRepository } from 'src/repository/course.repository';\nimport { ProfessorRepository } from 'src/repository/professor.repository';\nimport { StudentRepository } from 'src/repository/student.repository copy';\nimport { CourseService } from 'src/service/course.service';\nimport { ProfessorService } from 'src/service/professor.service';\nimport { StudentService } from 'src/service/student.service';\n\n@Module({\n    imports: [ConfigModule, TypeOrmModule.forFeature([StudentRepository, ProfessorRepository, CourseRepository])],\n    controllers: [CourseController],\n    providers: [StudentService,ProfessorService,CourseService],\n    exports: [],\n})\nexport class CoursesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeaderUtil.html":{"url":"classes/HeaderUtil.html","title":"class - HeaderUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeaderUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/utils/header-util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addEntityCreatedHeaders\n                            \n                            \n                                    Static\n                                addEntityDeletedHeaders\n                            \n                            \n                                    Static\n                                addEntityUpdatedHeaders\n                            \n                            \n                                    Static\n                                addPaginationHeaders\n                            \n                            \n                                    Static\n                                createAlert\n                            \n                            \n                                    Private\n                                    Static\n                                prepareLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        addEntityCreatedHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    addEntityCreatedHeaders(res: Response, entityName, param)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        addEntityDeletedHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    addEntityDeletedHeaders(res: Response, entityName, param)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        addEntityUpdatedHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    addEntityUpdatedHeaders(res: Response, entityName, param)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        addPaginationHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPaginationHeaders(res: Response, page: Page)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:37\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAlert(res: Response, message: string, param: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        prepareLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareLink(url, pageNumber, pageSize, relType)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/utils/header-util.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageNumber\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    relType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Response } from 'express';\nimport { Page } from '../../domain/base/pagination.entity';\n\nconst applicationName = \"backend-nestjs-exercise\";\nconst enableTranslation = true;\n\nexport class HeaderUtil {\n    static createAlert(res: Response, message: string, param: string): any {\n        res.set('X-' + applicationName + '-alert', message);\n        res.set('X-' + applicationName + '-params', param);\n    }\n\n    static addEntityCreatedHeaders(res: Response, entityName, param): any {\n        res.status(201);\n        const message = enableTranslation\n            ? applicationName + '.' + entityName + '.created'\n            : 'A new ' + entityName + ' is created with identifier ' + param;\n        this.createAlert(res, message, param);\n    }\n\n    static addEntityUpdatedHeaders(res: Response, entityName, param): any {\n        res.status(200);\n        const message = enableTranslation\n            ? applicationName + '.' + entityName + '.updated'\n            : 'A ' + entityName + ' is updated with identifier ' + param;\n        this.createAlert(res, message, param);\n    }\n\n    static addEntityDeletedHeaders(res: Response, entityName, param): any {\n        res.status(204);\n        const message = enableTranslation\n            ? applicationName + '.' + entityName + '.deleted'\n            : 'A ' + entityName + ' is deleted with identifier ' + param;\n        this.createAlert(res, message, param);\n    }\n\n    static addPaginationHeaders(res: Response, page: Page): any {\n        const url = res.req.url;\n        res.set('X-Total-Count', page.total.toString());\n        const pageNumber = page.pageable.page;\n        const pageSize = page.pageable.size;\n        const links = [];\n        if (pageNumber  0) {\n            links.push(this.prepareLink(url, pageNumber - 1, pageSize, 'prev'));\n        }\n        links.push(this.prepareLink(url, page.total - 1, pageSize, 'last'));\n        links.push(this.prepareLink(url, 0, pageSize, 'first'));\n        res.set('Link', links.join(','));\n    }\n\n    private static prepareLink(url, pageNumber, pageSize, relType): any {\n        url = new URL('http://localhost' + url);\n        url.searchParams.set('page', pageNumber);\n        url.searchParams.set('size', pageSize);\n        url = url.toString().replace('http://localhost', '');\n        return `; rel=\"${relType}\"`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/rest/health-check.controllers.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/controllers/rest/health-check.controllers.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, HttpHealthIndicator, TypeOrmHealthIndicator } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private db: TypeOrmHealthIndicator,\n        private http: HttpHealthIndicator,\n    ) { }\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.http.pingCheck('internet-ping', 'https://www.google.com'),\n            () => this.db.pingCheck('database'),\n        ]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from 'src/controllers/rest/health-check.controllers';\n\n@Module({\n    imports: [TerminusModule, HttpModule],\n    controllers: [HealthController],\n})\nexport class HealthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/Exceptions/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/Exceptions/http-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport { Errors } from './enums/eng-errors.enum';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n        let message = (exception.getResponse() as any).message;\n\n        // if (Array.isArray(message)) {\n        //     message = message[0];\n        // }\n\n        // const msg: keyof typeof Errors = message.toUpperCase();\n      \n        response.status(status).send({\n            statusCode: status,\n            errors: Errors[message],\n            timestamp: new Date().toISOString(),\n            path: request.url,\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/logging.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor, Logger } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Request } from 'express';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        const req: Request = context.switchToHttp().getRequest();\n        Logger.debug(\n            `${context.getClass().name}.${context.getHandler().name}() : ${req.method} ${req.url}`,\n            'LoggingInterceptor',\n        );\n        return next.handle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/base/pagination.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                pageable\n                            \n                            \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: T[], total: number, pageable: PageRequest)\n                    \n                \n                        \n                            \n                                Defined in src/domain/base/pagination.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageable\n                                                  \n                                                        \n                                                                        PageRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageRequest\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from './base.entity';\nimport { Type, Expose as JsonProperty } from 'class-transformer';\n\nexport class Sort {\n    public property: string;\n    public direction: 'ASC' | 'DESC' | string;\n    constructor(sort: string) {\n        if (sort) {\n            [this.property, this.direction] = sort.split(',');\n        }\n    }\n\n    asOrder(): any {\n        const order = {};\n        order[this.property] = this.direction;\n        return order;\n    }\n}\n\nexport class PageRequest {\n    @JsonProperty()\n    page = 0;\n    @JsonProperty()\n    size = 20;\n    @Type(() => Sort)\n    sort: Sort = new Sort('id,ASC');\n\n    constructor(page: any, size: any, sort: any) {\n        this.page = +page || this.page;\n        this.size = +size || this.size;\n        this.sort = sort ? new Sort(sort) : this.sort;\n    }\n}\n\nexport class Page {\n    constructor(public content: T[], public total: number, public pageable: PageRequest) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageRequest.html":{"url":"classes/PageRequest.html","title":"class - PageRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/base/pagination.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                page\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(page: any, size: any, sort: any)\n                    \n                \n                        \n                            \n                                Defined in src/domain/base/pagination.entity.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sort\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JsonProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JsonProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sort\n\n                    \n                \n                \n                    \n                        Default value : new Sort('id,ASC')\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from './base.entity';\nimport { Type, Expose as JsonProperty } from 'class-transformer';\n\nexport class Sort {\n    public property: string;\n    public direction: 'ASC' | 'DESC' | string;\n    constructor(sort: string) {\n        if (sort) {\n            [this.property, this.direction] = sort.split(',');\n        }\n    }\n\n    asOrder(): any {\n        const order = {};\n        order[this.property] = this.direction;\n        return order;\n    }\n}\n\nexport class PageRequest {\n    @JsonProperty()\n    page = 0;\n    @JsonProperty()\n    size = 20;\n    @Type(() => Sort)\n    sort: Sort = new Sort('id,ASC');\n\n    constructor(page: any, size: any, sort: any) {\n        this.page = +page || this.page;\n        this.size = +size || this.size;\n        this.sort = sort ? new Sort(sort) : this.sort;\n    }\n}\n\nexport class Page {\n    constructor(public content: T[], public total: number, public pageable: PageRequest) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Professor.html":{"url":"entities/Professor.html","title":"entity - Professor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Professor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/professor.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                givenName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.professor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/professor.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/professor.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, OneToMany } from 'typeorm';\nimport { BaseEntity } from './base/base.entity';\nimport { Course } from './course.entity';\n\n@Entity('professor')\nexport class Professor extends BaseEntity {\n    @Column({ nullable: true, unique: true })\n    givenName: string;\n\n    @OneToMany(() => Course, c => c.professor)\n    courses: Course[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessorDTO.html":{"url":"classes/ProfessorDTO.html","title":"class - ProfessorDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessorDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/professor.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                An Professor DTO object.\n\n            \n\n            \n                Extends\n            \n            \n                        BaseDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                givenName\n                            \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastModifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, description: 'Array of users', required: false})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/professor.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/professor.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\nimport { Course } from 'src/domain/course.entity';\nimport { BaseDTO } from './base.dto';\n/**\n * An Professor DTO object.\n */\nexport class ProfessorDTO extends BaseDTO {\n    @ApiProperty()\n    @IsString()\n    givenName: string;\n\n    @ApiProperty({\n        isArray: true,\n        description: 'Array of users',\n        required: false,\n    })\n    @Type(() => Course)\n    courses: Course[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessorMapper.html":{"url":"classes/ProfessorMapper.html","title":"class - ProfessorMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessorMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/mapper/professor.mapper.ts\n        \n\n\n            \n                Description\n            \n            \n                An Professor mapper object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDTOtoEntity\n                            \n                            \n                                    Static\n                                fromEntityToDTO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromDTOtoEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromDTOtoEntity(professorDTO: ProfessorDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/professor.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professorDTO\n                                    \n                                                ProfessorDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Professor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromEntityToDTO\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromEntityToDTO(professor: Professor)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/professor.mapper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professor\n                                    \n                                                Professor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProfessorDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Professor } from 'src/domain/professor.entity';\nimport { ProfessorDTO } from '../dto/professor.dto';\n\n/**\n * An Professor mapper object.\n */\nexport class ProfessorMapper {\n    static fromDTOtoEntity(professorDTO: ProfessorDTO): Professor {\n        if (!professorDTO) {\n            return;\n        }\n        const professor = new Professor();\n        const fields = Object.getOwnPropertyNames(professorDTO);\n        fields.forEach(field => {\n            professor[field] = professorDTO[field];\n        });\n        return professor;\n    }\n\n    static fromEntityToDTO(professor: Professor): ProfessorDTO {\n        if (!professor) {\n            return;\n        }\n        const professorDTO = new ProfessorDTO();\n\n        const fields = Object.getOwnPropertyNames(professor);\n\n        fields.forEach(field => {\n            professorDTO[field] = professor[field];\n        });\n\n        return professorDTO;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessorRepository.html":{"url":"classes/ProfessorRepository.html","title":"class - ProfessorRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessorRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repository/professor.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Professor } from 'src/domain/professor.entity';\nimport { EntityRepository, Repository } from 'typeorm';\n\n@EntityRepository(Professor)\nexport class ProfessorRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfessorService.html":{"url":"injectables/ProfessorService.html","title":"injectable - ProfessorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfessorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/professor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAndCount\n                            \n                            \n                                    Async\n                                findByfields\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getProfessorNameById\n                            \n                            \n                                    Async\n                                returnProfessorIfExistsById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(professorRepository: ProfessorRepository)\n                    \n                \n                        \n                            \n                                Defined in src/service/professor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        professorRepository\n                                                  \n                                                        \n                                                                        ProfessorRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCount(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByfields\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByfields(options: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOneOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfessorNameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfessorNameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        returnProfessorIfExistsById\n                        \n                    \n                \n            \n            \n                \n                    \n                    returnProfessorIfExistsById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/professor.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfessorRepository } from 'src/repository/professor.repository';\nimport { Errors } from 'src/shared/Exceptions/enums/eng-errors.enum';\nimport { FindManyOptions, FindOneOptions } from 'typeorm';\nimport { ProfessorDTO } from './dto/professor.dto';\nimport { ProfessorMapper } from './mapper/professor.mapper';\n\n\n\n@Injectable()\nexport class ProfessorService {\n    constructor(@InjectRepository(ProfessorRepository) private professorRepository: ProfessorRepository) { }\n\n    async findById(id: string): Promise {\n        const result = await this.professorRepository.findOne(id);\n        return ProfessorMapper.fromEntityToDTO(result);\n    }\n\n    async findByfields(options: FindOneOptions): Promise {\n        const result = await this.professorRepository.findOne(options);\n        return ProfessorMapper.fromEntityToDTO(result);\n    }\n\n    async find(options: FindManyOptions): Promise {\n        const result = await this.professorRepository.findOne(options);\n        return ProfessorMapper.fromEntityToDTO(result);\n    }\n\n    async getProfessorNameById(id: string): Promise {\n        const professor = await this.returnProfessorIfExistsById(id);\n        return { givenName: professor.givenName }\n    }\n\n    async findAndCount(options: FindManyOptions): Promise {\n        const resultList = await this.professorRepository.findAndCount(options);\n        const professorsDTO: ProfessorDTO[] = [];\n        if (resultList && resultList[0]) {\n            resultList[0].forEach(professor => professorsDTO.push(ProfessorMapper.fromEntityToDTO(professor)));\n            resultList[0] = professorsDTO;\n        }\n        return resultList;\n    }\n\n    async returnProfessorIfExistsById(id: string) {\n        const professorExists = await this.findById(id);\n        if (!professorExists) {\n            throw new NotFoundException(Errors.USER_NOT_FOUND);\n        } else {\n            return professorExists;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryExceptionFilter.html":{"url":"classes/QueryExceptionFilter.html","title":"class - QueryExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/Exceptions/query-Exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(err: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/Exceptions/query-Exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgumentsHost,\n    Catch,\n    ExceptionFilter,\n    HttpStatus,\n} from '@nestjs/common';\nimport { QueryFailedError } from 'typeorm';\nimport { Request, Response } from 'express';\nimport { Errors } from './enums/eng-errors.enum';\n\n@Catch(QueryFailedError)\nexport class QueryExceptionFilter implements ExceptionFilter {\n    catch(err: any, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        if (\n            err.code === Errors.DUPLICATION ||\n            err.code === Errors.DUPLICATION_REFERENCE\n        ) {\n            response.status(HttpStatus.CONFLICT).json({\n                statusCode: HttpStatus.CONFLICT,\n                errorCode: Errors.CONFLICT,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n        } else if (\n            err.code === Errors.ROW_IS_REFERENCED ||\n            err.code === Errors.KEY_IS_REFERENCED\n        ) {\n            response.status(HttpStatus.CONFLICT).json({\n                statusCode: HttpStatus.CONFLICT,\n                errorCode: Errors.REFERENCED,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n        } else {\n            response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n                statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n                errorCode: Errors.INTERNAL_SERVER_ERROR,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sort.html":{"url":"classes/Sort.html","title":"class - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/base/pagination.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                asOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sort: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/base/pagination.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sort\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ASC\" | \"DESC\" | string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/base/pagination.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        asOrder\n                        \n                    \n                \n            \n            \n                \nasOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/base/pagination.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from './base.entity';\nimport { Type, Expose as JsonProperty } from 'class-transformer';\n\nexport class Sort {\n    public property: string;\n    public direction: 'ASC' | 'DESC' | string;\n    constructor(sort: string) {\n        if (sort) {\n            [this.property, this.direction] = sort.split(',');\n        }\n    }\n\n    asOrder(): any {\n        const order = {};\n        order[this.property] = this.direction;\n        return order;\n    }\n}\n\nexport class PageRequest {\n    @JsonProperty()\n    page = 0;\n    @JsonProperty()\n    size = 20;\n    @Type(() => Sort)\n    sort: Sort = new Sort('id,ASC');\n\n    constructor(page: any, size: any, sort: any) {\n        this.page = +page || this.page;\n        this.size = +size || this.size;\n        this.sort = sort ? new Sort(sort) : this.sort;\n    }\n}\n\nexport class Page {\n    constructor(public content: T[], public total: number, public pageable: PageRequest) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Student.html":{"url":"entities/Student.html","title":"entity - Student","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/student.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                givenName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, c => c.students)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/student.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/student.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinTable, ManyToMany } from 'typeorm';\nimport { BaseEntity } from './base/base.entity';\nimport { Course } from './course.entity';\n\n@Entity('student')\nexport class Student extends BaseEntity {\n    @Column({ nullable: true, unique: true })\n    givenName: string;\n\n    @ManyToMany(() => Course, (c) => c.students)\n    @JoinTable()\n    courses: Course[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StudentDTO.html":{"url":"classes/StudentDTO.html","title":"class - StudentDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StudentDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/student.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                An Student DTO object.\n\n            \n\n            \n                Extends\n            \n            \n                        BaseDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                givenName\n                            \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastModifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, description: 'Array of users', required: false})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/student.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/student.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastModifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDTO:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\nimport { Course } from 'src/domain/course.entity';\nimport { BaseDTO } from './base.dto';\n/**\n * An Student DTO object.\n */\nexport class StudentDTO extends BaseDTO {\n    @ApiProperty()\n    @IsString()\n    givenName: string;\n\n    @ApiProperty({\n        isArray: true,\n        description: 'Array of users',\n        required: false,\n    })\n    @Type(() => Course)\n    courses: Course[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StudentMapper.html":{"url":"classes/StudentMapper.html","title":"class - StudentMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StudentMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/mapper/student.mapper.ts\n        \n\n\n            \n                Description\n            \n            \n                An Student mapper object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDTOtoEntity\n                            \n                            \n                                    Static\n                                fromEntityToDTO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromDTOtoEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromDTOtoEntity(studentDTO: StudentDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/student.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    studentDTO\n                                    \n                                                StudentDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Student\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromEntityToDTO\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromEntityToDTO(student: Student)\n                \n            \n\n\n            \n                \n                    Defined in src/service/mapper/student.mapper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    student\n                                    \n                                                Student\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StudentDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Student } from 'src/domain/student.entity';\nimport { StudentDTO } from '../dto/student.dto';\n\n/**\n * An Student mapper object.\n */\nexport class StudentMapper {\n    static fromDTOtoEntity(studentDTO: StudentDTO): Student {\n        if (!studentDTO) {\n            return;\n        }\n        const student = new Student();\n        const fields = Object.getOwnPropertyNames(studentDTO);\n        fields.forEach(field => {\n            student[field] = studentDTO[field];\n        });\n        return student;\n    }\n\n    static fromEntityToDTO(student: Student): StudentDTO {\n        if (!student) {\n            return;\n        }\n        const studentDTO = new StudentDTO();\n\n        const fields = Object.getOwnPropertyNames(student);\n\n        fields.forEach(field => {\n            studentDTO[field] = student[field];\n        });\n\n        return studentDTO;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StudentRepository.html":{"url":"classes/StudentRepository.html","title":"class - StudentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StudentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repository/student.repository copy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Student } from 'src/domain/student.entity';\nimport { EntityRepository, Repository } from 'typeorm';\n\n@EntityRepository(Student)\nexport class StudentRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAndCount\n                            \n                            \n                                    Async\n                                findByfields\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getStudentNameById\n                            \n                            \n                                    Async\n                                returnStudentIfExistsById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentRepository: StudentRepository)\n                    \n                \n                        \n                            \n                                Defined in src/service/student.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentRepository\n                                                  \n                                                        \n                                                                        StudentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndCount(options: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindManyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByfields\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByfields(options: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FindOneOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudentNameById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudentNameById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        returnStudentIfExistsById\n                        \n                    \n                \n            \n            \n                \n                    \n                    returnStudentIfExistsById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/student.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { StudentRepository } from 'src/repository/student.repository copy';\nimport { Errors } from 'src/shared/Exceptions/enums/eng-errors.enum';\nimport { FindManyOptions, FindOneOptions } from 'typeorm';\nimport { StudentDTO } from './dto/student.dto';\nimport { StudentMapper } from './mapper/student.mapper';\n\n\n@Injectable()\nexport class StudentService {\n    constructor(@InjectRepository(StudentRepository) private studentRepository: StudentRepository) { }\n\n    async findById(id: string): Promise {\n        const result = await this.studentRepository.findOne(id);\n        return StudentMapper.fromEntityToDTO(result);\n    }\n\n    async findByfields(options: FindOneOptions): Promise {\n        const result = await this.studentRepository.findOne(options);\n        return StudentMapper.fromEntityToDTO(result);\n    }\n\n    async find(options: FindManyOptions): Promise {\n        const result = await this.studentRepository.findOne(options);\n        return StudentMapper.fromEntityToDTO(result);\n    }\n\n    async findAndCount(options: FindManyOptions): Promise {\n        const resultList = await this.studentRepository.findAndCount(options);\n        const studentsDTO: StudentDTO[] = [];\n        if (resultList && resultList[0]) {\n            resultList[0].forEach(student => studentsDTO.push(StudentMapper.fromEntityToDTO(student)));\n            resultList[0] = studentsDTO;\n        }\n        return resultList;\n    }\n\n    async getStudentNameById(id: string): Promise {\n        const student = await this.returnStudentIfExistsById(id);\n        return { givenName: student.givenName }\n    }\n\n    async returnStudentIfExistsById(id: string) {\n        const studentExists = await this.findById(id);\n        if (!studentExists) {\n            throw new NotFoundException(Errors.USER_NOT_FOUND);\n        } else {\n            return studentExists;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/rest/course.controller.ts\n            \n            controller\n            CourseController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/rest/health-check.controllers.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/base/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/base/pagination.entity.ts\n            \n            class\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/base/pagination.entity.ts\n            \n            class\n            PageRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/base/pagination.entity.ts\n            \n            class\n            Sort\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/course.entity.ts\n            \n            entity\n            Course\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/professor.entity.ts\n            \n            entity\n            Professor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/student.entity.ts\n            \n            entity\n            Student\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1655032066706-ArticleTable.ts\n            \n            class\n            ArticleTable1655032066706\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/repository/course.repository.ts\n            \n            class\n            CourseRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repository/professor.repository.ts\n            \n            class\n            ProfessorRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repository/student.repository copy.ts\n            \n            class\n            StudentRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/service/dto/base.dto.ts\n            \n            class\n            BaseDTO\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/service/dto/course.dto.ts\n            \n            class\n            CourseDTO\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/service/dto/professor.dto.ts\n            \n            class\n            ProfessorDTO\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/service/dto/student.dto.ts\n            \n            class\n            StudentDTO\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/service/mapper/course.mapper.ts\n            \n            class\n            CourseMapper\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/service/mapper/professor.mapper.ts\n            \n            class\n            ProfessorMapper\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/service/mapper/student.mapper.ts\n            \n            class\n            StudentMapper\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/service/professor.service.ts\n            \n            injectable\n            ProfessorService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/service/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/shared/Exceptions/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/Exceptions/query-Exception.filter.ts\n            \n            class\n            QueryExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/utils/header-util.ts\n            \n            class\n            HeaderUtil\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/utils/header-util.ts\n            \n            variable\n            applicationName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/header-util.ts\n            \n            variable\n            enableTranslation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.0.7\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.0.6\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            glob : ^8.0.1\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : 0.2.34\n        \n            typeorm-encrypted : 0.5.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Errors   (src/.../eng-errors.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/Exceptions/enums/eng-errors.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Errors\n                    \n                \n                        \n                            \n                                 USER_UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : USER_UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                 DUPLICATION\n                            \n                        \n                        \n                            \n                                Value : ER_DUP_ENTRY\n                            \n                        \n                        \n                            \n                                 DUPLICATION_REFERENCE\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n                        \n                            \n                                 KEY_IS_REFERENCED\n                            \n                        \n                        \n                            \n                                Value : 23503\n                            \n                        \n                        \n                            \n                                 ROW_IS_REFERENCED\n                            \n                        \n                        \n                            \n                                Value : ER_ROW_IS_REFERENCED_2\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : Internal Server Error\n                            \n                        \n                        \n                            \n                                 CONFLICT\n                            \n                        \n                        \n                            \n                                Value : Resource already exits !\n                            \n                        \n                        \n                            \n                                 REFERENCED\n                            \n                        \n                        \n                            \n                                Value : this entity is used somewhere else !\n                            \n                        \n                        \n                            \n                                 EMAIL_EXISTS\n                            \n                        \n                        \n                            \n                                Value : This mail is already exists !\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGet Started\n\nInstall node.js and the Yarn package manager, as well as Docker.\nAfter cloning the repository, run yarn in its root to install all dependencies and set up the git hooks.\nOptional: Configure VSCode as described in \"Editor Setup\" below.\nRun yarn up:dev to start the development database in a Docker container.\nStart the application using yarn start:dev. Happy coding!\n\nNote: See \"Available Scripts\" below for more information.\nFile Structure\nAll files should be named in lower-case-with-dashes.ts.\nThe contents of this repo are structured in the following way:\n\n.vscode/: VSCode config\ndist/: Build artifacts (excluded from version control)\nsrc/: The application's source files\napp/: The app's entry point\n*/: Top-level NestJS modules\n\n\n\nInstructions to build and run the container image\ndocker build -t nest-api .\ndocker run -p 3001:3001 nest-apiAvailable Scripts\nThe most important scripts are outlined below. You can find all script definitions in the package.json.\nyarn start:dev\nLaunches a development server that runs the application in development mode.\nAfter running this command, the app will be available at http://localhost:3001.\nThe app will automatically reload if you change any of the source files.\nyarn up:dev\nStarts the dockerized infrastructure (e.g., PostgreSQL).\nIt can be shut down again using yarn down:dev.\nyarn format\nRuns automated code formatting on all applicable file types.\nyarn lint\nLints all applicable files and prints the output.\nyarn compile\nDry-runs the TypeScript compiler.\nThis is especially useful to check whether any types or references broke after a big refactoring.\nyarn test\nRuns unit tests via Jest.\nTests are automatically discovered from all *.spec.{ts,tsx} files.\nyarn test:e2e\nRuns end-to-end tests via Jest.\nyarn build\nBuilds the application.\nThe build artifacts will be stored in the dist/ directory.\nEditor Setup\nWe recommend using VSCode.\nAfter opening the repo in VSCode, it will ask you if you want to install recommend extensions. For a seamless development experience, we recommend accepting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nCourseService->CoursesModule\n\n\n\n\n\nProfessorService\n\nProfessorService\n\nCoursesModule -->\n\nProfessorService->CoursesModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nCoursesModule -->\n\nStudentService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applicationName   (src/.../header-util.ts)\n                        \n                        \n                            enableTranslation   (src/.../header-util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/utils/header-util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"backend-nestjs-exercise\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableTranslation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
